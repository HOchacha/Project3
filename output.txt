27bdffe8
afbe0014
03a0f021
afc00008
afc0000c
afc00008
08000011
00000000
8fc3000c
8fc20008
00000000
00621021
afc2000c
8fc20008
00000000
24420001
afc20008
8fc20008
00000000
28420065
1440fff3
00000000
8fc2000c
03c0e821
8fbe0014
27bd0018
03e00008
00000000
PC : 00000000
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : 27BDFFE8
PIPE :: decode_instruction : 00000000
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000000
ID  res : PC = 00000000
EX  res : PC = 00000000
MEM res : PC = 00000000
WB  res : PC = 00000000
PC : 00000004
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFBE0014
PIPE :: decode_instruction : 27bdffe8
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000004
ID  res : PC = 00000000
EX  res : PC = 00000000
MEM res : PC = 00000000
WB  res : PC = 00000000
PC : 00000008
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (01000000, 01000000)
PIPE :: Fetched instruction : 03A0F021
PIPE :: decode_instruction : afbe0014
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000008
ID  res : PC = 00000004
EX  res : PC = 00000000
MEM res : PC = 00000000
WB  res : PC = 00000000
PC : 0000000C
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00FFFFE8PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : AFC00008
PIPE :: decode_instruction : 03a0f021
PIPE :: 27bdffe8 :: memory access : Address = 00FFFFE8, Reg2 = 01000000
================current pipeline status=================
IF  res : PC = 0000000C
ID  res : PC = 00000008
EX  res : PC = 00000004
MEM res : PC = 00000000
WB  res : PC = 00000000
PC : 00000010
PIPE :: write back : data = 00FFFFE8, reg_idx = 0000001D, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[29] = 00ffffe8
PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : AFC0000C
PIPE :: decode_instruction : afc00008
PIPE :: afbe0014 :: memory access : Address = 00FFFFFC, Reg2 = 00000000
MEMORY WRITE : MEM[00fffffc] = 00000000
================current pipeline status=================
IF  res : PC = 00000010
ID  res : PC = 0000000C
EX  res : PC = 00000008
MEM res : PC = 00000004
WB  res : PC = 00000000
PC : 00000014
PIPE :: write back : data = 00FFFFFC, reg_idx = 0000001E, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00FFFFE8PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : AFC00008
PIPE :: decode_instruction : afc0000c
PIPE :: 03a0f021 :: memory access : Address = 00FFFFE8, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000014
ID  res : PC = 00000010
EX  res : PC = 0000000C
MEM res : PC = 00000008
WB  res : PC = 00000004
PC : 00000018
PIPE :: write back : data = 00FFFFE8, reg_idx = 0000001E, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[30] = 00ffffe8
PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : 08000011
PIPE :: decode_instruction : afc00008
PIPE :: afc00008 :: memory access : Address = 00FFFFF0, Reg2 = 00000000
MEMORY WRITE : MEM[00fffff0] = 00000000
================current pipeline status=================
IF  res : PC = 00000018
ID  res : PC = 00000014
EX  res : PC = 00000010
MEM res : PC = 0000000C
WB  res : PC = 00000008
PC : 0000001C
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000000, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 08000011
PIPE :: afc0000c :: memory access : Address = 00FFFFF4, Reg2 = 00000000
MEMORY WRITE : MEM[00fffff4] = 00000000
================current pipeline status=================
IF  res : PC = 0000001C
ID  res : PC = 00000018
EX  res : PC = 00000014
MEM res : PC = 00000010
WB  res : PC = 0000000C
PC : 00000020
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000000, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 00000000
PIPE :: afc00008 :: memory access : Address = 00FFFFF0, Reg2 = 00000000
MEMORY WRITE : MEM[00fffff0] = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 0000001C
EX  res : PC = 00000018
MEM res : PC = 00000014
WB  res : PC = 00000010
PC : 00000048
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000000, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 08000011 :: memory access : Address = 00000011, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 0000001C
MEM res : PC = 00000018
WB  res : PC = 00000014
PC : 0000004C
PIPE :: write back : data = 00000011, reg_idx = 00000000, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 0000001C
WB  res : PC = 00000018
PC : 00000050
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000000
MEMORY READ : MEM[00fffff0] = 00000000
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 0000001C
PC : 00000054
PIPE :: write back : data = 00000000, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000000
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000054
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000058
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 00000000
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000054
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000024
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000054
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000054
WB  res : PC = 00000050
PC : 0000002C
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000000
MEMORY READ : MEM[00fffff4] = 00000000
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000054
PC : 00000030
PIPE :: write back : data = 00000000, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000000
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000000
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000000, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000000
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000000PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000000, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000000
PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000000
MEMORY WRITE : MEM[00fffff4] = 00000000
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000000
MEMORY READ : MEM[00fffff0] = 00000000
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000000, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000000
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000001PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY WRITE : MEM[00fffff0] = 00000001
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000001
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00000001, 00000001)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000001
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000000
MEMORY READ : MEM[00fffff4] = 00000000
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000000, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000000
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000001
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00000000, 00000001)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000001PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000001, Reg2 = 00000001
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000001
MEMORY WRITE : MEM[00fffff4] = 00000001
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000001
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00000001, 00000001)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000002PIPE :: execute_instruction : operands (00FFFFE8, 00000002)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000002, Reg2 = 00000001
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000002, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000002
PIPE :: execute_instruction : operands (00FFFFE8, 00000002)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000002
MEMORY WRITE : MEM[00fffff0] = 00000002
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000002
MEMORY READ : MEM[00fffff0] = 00000002
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000002, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000002
PIPE :: execute_instruction : operands (00000002, 00000002)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000002
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000000
MEMORY READ : MEM[00fffff4] = 00000001
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000001, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000001
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000002
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000002, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000002
PIPE :: execute_instruction : operands (00000001, 00000002)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000003PIPE :: execute_instruction : operands (00FFFFE8, 00000003)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000003, Reg2 = 00000002
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000003, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000003
PIPE :: execute_instruction : operands (00FFFFE8, 00000003)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000003
MEMORY WRITE : MEM[00fffff4] = 00000003
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000003
MEMORY READ : MEM[00fffff0] = 00000002
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000002, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000002
PIPE :: execute_instruction : operands (00000002, 00000002)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000003PIPE :: execute_instruction : operands (00FFFFE8, 00000003)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000003, Reg2 = 00000002
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000003, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000003
PIPE :: execute_instruction : operands (00FFFFE8, 00000003)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000003
MEMORY WRITE : MEM[00fffff0] = 00000003
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000003
MEMORY READ : MEM[00fffff0] = 00000003
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000003, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000003
PIPE :: execute_instruction : operands (00000003, 00000003)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000003
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000001
MEMORY READ : MEM[00fffff4] = 00000003
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000003, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000003
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000003
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000003, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000003
PIPE :: execute_instruction : operands (00000003, 00000003)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000006PIPE :: execute_instruction : operands (00FFFFE8, 00000006)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000006, Reg2 = 00000003
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000006, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000006
PIPE :: execute_instruction : operands (00FFFFE8, 00000006)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000006
MEMORY WRITE : MEM[00fffff4] = 00000006
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000006
MEMORY READ : MEM[00fffff0] = 00000003
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000003, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000003
PIPE :: execute_instruction : operands (00000003, 00000003)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000004PIPE :: execute_instruction : operands (00FFFFE8, 00000004)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000004, Reg2 = 00000003
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000004, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000004
PIPE :: execute_instruction : operands (00FFFFE8, 00000004)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000004
MEMORY WRITE : MEM[00fffff0] = 00000004
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000004
MEMORY READ : MEM[00fffff0] = 00000004
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000004, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000004
PIPE :: execute_instruction : operands (00000004, 00000004)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000004
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000003)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000003
MEMORY READ : MEM[00fffff4] = 00000006
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000006, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000006
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000004
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000004, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000004
PIPE :: execute_instruction : operands (00000006, 00000004)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000000APIPE :: execute_instruction : operands (00FFFFE8, 0000000A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000000A, Reg2 = 00000004
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000000A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000a
PIPE :: execute_instruction : operands (00FFFFE8, 0000000A)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000000A
MEMORY WRITE : MEM[00fffff4] = 0000000a
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000A
MEMORY READ : MEM[00fffff0] = 00000004
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000004, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000004
PIPE :: execute_instruction : operands (00000004, 00000004)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000005PIPE :: execute_instruction : operands (00FFFFE8, 00000005)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000005, Reg2 = 00000004
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000005, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000005
PIPE :: execute_instruction : operands (00FFFFE8, 00000005)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000005
MEMORY WRITE : MEM[00fffff0] = 00000005
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000005
MEMORY READ : MEM[00fffff0] = 00000005
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000005, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000005
PIPE :: execute_instruction : operands (00000005, 00000005)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000005
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000006)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000006
MEMORY READ : MEM[00fffff4] = 0000000a
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000000A, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000000a
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000005
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000005, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000005
PIPE :: execute_instruction : operands (0000000A, 00000005)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000000FPIPE :: execute_instruction : operands (00FFFFE8, 0000000F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000000F, Reg2 = 00000005
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000000F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000f
PIPE :: execute_instruction : operands (00FFFFE8, 0000000F)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000000F
MEMORY WRITE : MEM[00fffff4] = 0000000f
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000F
MEMORY READ : MEM[00fffff0] = 00000005
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000005, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000005
PIPE :: execute_instruction : operands (00000005, 00000005)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000006PIPE :: execute_instruction : operands (00FFFFE8, 00000006)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000006, Reg2 = 00000005
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000006, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000006
PIPE :: execute_instruction : operands (00FFFFE8, 00000006)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000006
MEMORY WRITE : MEM[00fffff0] = 00000006
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000006
MEMORY READ : MEM[00fffff0] = 00000006
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000006, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000006
PIPE :: execute_instruction : operands (00000006, 00000006)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000006
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000000A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000000A
MEMORY READ : MEM[00fffff4] = 0000000f
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000000F, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000000f
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000006
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000006, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000006
PIPE :: execute_instruction : operands (0000000F, 00000006)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000015PIPE :: execute_instruction : operands (00FFFFE8, 00000015)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000015, Reg2 = 00000006
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000015, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000015
PIPE :: execute_instruction : operands (00FFFFE8, 00000015)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000015
MEMORY WRITE : MEM[00fffff4] = 00000015
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000015
MEMORY READ : MEM[00fffff0] = 00000006
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000006, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000006
PIPE :: execute_instruction : operands (00000006, 00000006)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000007PIPE :: execute_instruction : operands (00FFFFE8, 00000007)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000007, Reg2 = 00000006
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000007, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000007
PIPE :: execute_instruction : operands (00FFFFE8, 00000007)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000007
MEMORY WRITE : MEM[00fffff0] = 00000007
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000007
MEMORY READ : MEM[00fffff0] = 00000007
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000007, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000007
PIPE :: execute_instruction : operands (00000007, 00000007)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000007
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000000F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000000F
MEMORY READ : MEM[00fffff4] = 00000015
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000015, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000015
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000007
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000007, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000007
PIPE :: execute_instruction : operands (00000015, 00000007)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000001CPIPE :: execute_instruction : operands (00FFFFE8, 0000001C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000001C, Reg2 = 00000007
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000001C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001c
PIPE :: execute_instruction : operands (00FFFFE8, 0000001C)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000001C
MEMORY WRITE : MEM[00fffff4] = 0000001c
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001C
MEMORY READ : MEM[00fffff0] = 00000007
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000007, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000007
PIPE :: execute_instruction : operands (00000007, 00000007)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000008PIPE :: execute_instruction : operands (00FFFFE8, 00000008)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000008, Reg2 = 00000007
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000008, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000008
PIPE :: execute_instruction : operands (00FFFFE8, 00000008)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000008
MEMORY WRITE : MEM[00fffff0] = 00000008
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000008
MEMORY READ : MEM[00fffff0] = 00000008
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000008, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000008
PIPE :: execute_instruction : operands (00000008, 00000008)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000008
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000015)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000015
MEMORY READ : MEM[00fffff4] = 0000001c
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000001C, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000001c
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000008
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000008, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000008
PIPE :: execute_instruction : operands (0000001C, 00000008)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000024PIPE :: execute_instruction : operands (00FFFFE8, 00000024)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000024, Reg2 = 00000008
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000024, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000024
PIPE :: execute_instruction : operands (00FFFFE8, 00000024)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000024
MEMORY WRITE : MEM[00fffff4] = 00000024
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000024
MEMORY READ : MEM[00fffff0] = 00000008
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000008, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000008
PIPE :: execute_instruction : operands (00000008, 00000008)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000009PIPE :: execute_instruction : operands (00FFFFE8, 00000009)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000009, Reg2 = 00000008
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000009, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000009
PIPE :: execute_instruction : operands (00FFFFE8, 00000009)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000009
MEMORY WRITE : MEM[00fffff0] = 00000009
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000009
MEMORY READ : MEM[00fffff0] = 00000009
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000009, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000009
PIPE :: execute_instruction : operands (00000009, 00000009)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000009
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000001C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000001C
MEMORY READ : MEM[00fffff4] = 00000024
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000024, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000024
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000009
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000009, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000009
PIPE :: execute_instruction : operands (00000024, 00000009)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000002DPIPE :: execute_instruction : operands (00FFFFE8, 0000002D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000002D, Reg2 = 00000009
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000002D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002d
PIPE :: execute_instruction : operands (00FFFFE8, 0000002D)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000002D
MEMORY WRITE : MEM[00fffff4] = 0000002d
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002D
MEMORY READ : MEM[00fffff0] = 00000009
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000009, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000009
PIPE :: execute_instruction : operands (00000009, 00000009)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000000APIPE :: execute_instruction : operands (00FFFFE8, 0000000A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000000A, Reg2 = 00000009
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000000A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000a
PIPE :: execute_instruction : operands (00FFFFE8, 0000000A)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000A
MEMORY WRITE : MEM[00fffff0] = 0000000a
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000A
MEMORY READ : MEM[00fffff0] = 0000000a
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000000A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000a
PIPE :: execute_instruction : operands (0000000A, 0000000A)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000000A
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000024)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000024
MEMORY READ : MEM[00fffff4] = 0000002d
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000002D, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000002d
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000000a
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000000A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000a
PIPE :: execute_instruction : operands (0000002D, 0000000A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000037PIPE :: execute_instruction : operands (00FFFFE8, 00000037)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000037, Reg2 = 0000000A
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000037, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000037
PIPE :: execute_instruction : operands (00FFFFE8, 00000037)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000037
MEMORY WRITE : MEM[00fffff4] = 00000037
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000037
MEMORY READ : MEM[00fffff0] = 0000000a
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000000A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000a
PIPE :: execute_instruction : operands (0000000A, 0000000A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000000BPIPE :: execute_instruction : operands (00FFFFE8, 0000000B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000000B, Reg2 = 0000000A
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000000B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000b
PIPE :: execute_instruction : operands (00FFFFE8, 0000000B)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000B
MEMORY WRITE : MEM[00fffff0] = 0000000b
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000B
MEMORY READ : MEM[00fffff0] = 0000000b
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000000B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000b
PIPE :: execute_instruction : operands (0000000B, 0000000B)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000000B
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000002D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000002D
MEMORY READ : MEM[00fffff4] = 00000037
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000037, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000037
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000000b
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000000B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000b
PIPE :: execute_instruction : operands (00000037, 0000000B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000042PIPE :: execute_instruction : operands (00FFFFE8, 00000042)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000042, Reg2 = 0000000B
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000042, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000042
PIPE :: execute_instruction : operands (00FFFFE8, 00000042)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000042
MEMORY WRITE : MEM[00fffff4] = 00000042
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000042
MEMORY READ : MEM[00fffff0] = 0000000b
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000000B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000b
PIPE :: execute_instruction : operands (0000000B, 0000000B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000000CPIPE :: execute_instruction : operands (00FFFFE8, 0000000C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000000C, Reg2 = 0000000B
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000000C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000c
PIPE :: execute_instruction : operands (00FFFFE8, 0000000C)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000C
MEMORY WRITE : MEM[00fffff0] = 0000000c
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000C
MEMORY READ : MEM[00fffff0] = 0000000c
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000000C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000c
PIPE :: execute_instruction : operands (0000000C, 0000000C)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000000C
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000037)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000037
MEMORY READ : MEM[00fffff4] = 00000042
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000042, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000042
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000000c
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000000C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000c
PIPE :: execute_instruction : operands (00000042, 0000000C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000004EPIPE :: execute_instruction : operands (00FFFFE8, 0000004E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000004E, Reg2 = 0000000C
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000004E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004e
PIPE :: execute_instruction : operands (00FFFFE8, 0000004E)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000004E
MEMORY WRITE : MEM[00fffff4] = 0000004e
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004E
MEMORY READ : MEM[00fffff0] = 0000000c
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000000C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000c
PIPE :: execute_instruction : operands (0000000C, 0000000C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000000DPIPE :: execute_instruction : operands (00FFFFE8, 0000000D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000000D, Reg2 = 0000000C
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000000D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000d
PIPE :: execute_instruction : operands (00FFFFE8, 0000000D)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000D
MEMORY WRITE : MEM[00fffff0] = 0000000d
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000D
MEMORY READ : MEM[00fffff0] = 0000000d
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000000D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000d
PIPE :: execute_instruction : operands (0000000D, 0000000D)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000000D
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000042)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000042
MEMORY READ : MEM[00fffff4] = 0000004e
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000004E, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000004e
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000000d
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000000D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000d
PIPE :: execute_instruction : operands (0000004E, 0000000D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000005BPIPE :: execute_instruction : operands (00FFFFE8, 0000005B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000005B, Reg2 = 0000000D
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000005B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005b
PIPE :: execute_instruction : operands (00FFFFE8, 0000005B)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000005B
MEMORY WRITE : MEM[00fffff4] = 0000005b
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005B
MEMORY READ : MEM[00fffff0] = 0000000d
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000000D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000d
PIPE :: execute_instruction : operands (0000000D, 0000000D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000000EPIPE :: execute_instruction : operands (00FFFFE8, 0000000E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000000E, Reg2 = 0000000D
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000000E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000e
PIPE :: execute_instruction : operands (00FFFFE8, 0000000E)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000E
MEMORY WRITE : MEM[00fffff0] = 0000000e
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000E
MEMORY READ : MEM[00fffff0] = 0000000e
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000000E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000e
PIPE :: execute_instruction : operands (0000000E, 0000000E)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000000E
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000004E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000004E
MEMORY READ : MEM[00fffff4] = 0000005b
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000005B, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000005b
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000000e
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000000E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000e
PIPE :: execute_instruction : operands (0000005B, 0000000E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000069PIPE :: execute_instruction : operands (00FFFFE8, 00000069)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000069, Reg2 = 0000000E
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000069, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000069
PIPE :: execute_instruction : operands (00FFFFE8, 00000069)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000069
MEMORY WRITE : MEM[00fffff4] = 00000069
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000069
MEMORY READ : MEM[00fffff0] = 0000000e
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000000E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000e
PIPE :: execute_instruction : operands (0000000E, 0000000E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000000FPIPE :: execute_instruction : operands (00FFFFE8, 0000000F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000000F, Reg2 = 0000000E
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000000F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000f
PIPE :: execute_instruction : operands (00FFFFE8, 0000000F)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000F
MEMORY WRITE : MEM[00fffff0] = 0000000f
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000000F
MEMORY READ : MEM[00fffff0] = 0000000f
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000000F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000f
PIPE :: execute_instruction : operands (0000000F, 0000000F)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000000F
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000005B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000005B
MEMORY READ : MEM[00fffff4] = 00000069
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000069, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000069
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000000f
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000000F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000f
PIPE :: execute_instruction : operands (00000069, 0000000F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000078PIPE :: execute_instruction : operands (00FFFFE8, 00000078)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000078, Reg2 = 0000000F
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000078, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000078
PIPE :: execute_instruction : operands (00FFFFE8, 00000078)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000078
MEMORY WRITE : MEM[00fffff4] = 00000078
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000078
MEMORY READ : MEM[00fffff0] = 0000000f
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000000F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000000f
PIPE :: execute_instruction : operands (0000000F, 0000000F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000010PIPE :: execute_instruction : operands (00FFFFE8, 00000010)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000010, Reg2 = 0000000F
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000010, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000010
PIPE :: execute_instruction : operands (00FFFFE8, 00000010)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000010
MEMORY WRITE : MEM[00fffff0] = 00000010
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000010
MEMORY READ : MEM[00fffff0] = 00000010
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000010, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000010
PIPE :: execute_instruction : operands (00000010, 00000010)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000010
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000069)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000069
MEMORY READ : MEM[00fffff4] = 00000078
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000078, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000078
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000010
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000010, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000010
PIPE :: execute_instruction : operands (00000078, 00000010)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000088PIPE :: execute_instruction : operands (00FFFFE8, 00000088)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000088, Reg2 = 00000010
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000088, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000088
PIPE :: execute_instruction : operands (00FFFFE8, 00000088)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000088
MEMORY WRITE : MEM[00fffff4] = 00000088
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000088
MEMORY READ : MEM[00fffff0] = 00000010
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000010, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000010
PIPE :: execute_instruction : operands (00000010, 00000010)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000011PIPE :: execute_instruction : operands (00FFFFE8, 00000011)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000011, Reg2 = 00000010
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000011, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000011
PIPE :: execute_instruction : operands (00FFFFE8, 00000011)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000011
MEMORY WRITE : MEM[00fffff0] = 00000011
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000011
MEMORY READ : MEM[00fffff0] = 00000011
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000011, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000011
PIPE :: execute_instruction : operands (00000011, 00000011)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000011
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000078)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000078
MEMORY READ : MEM[00fffff4] = 00000088
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000088, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000088
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000011
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000011, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000011
PIPE :: execute_instruction : operands (00000088, 00000011)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000099PIPE :: execute_instruction : operands (00FFFFE8, 00000099)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000099, Reg2 = 00000011
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000099, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000099
PIPE :: execute_instruction : operands (00FFFFE8, 00000099)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000099
MEMORY WRITE : MEM[00fffff4] = 00000099
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000099
MEMORY READ : MEM[00fffff0] = 00000011
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000011, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000011
PIPE :: execute_instruction : operands (00000011, 00000011)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000012PIPE :: execute_instruction : operands (00FFFFE8, 00000012)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000012, Reg2 = 00000011
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000012, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000012
PIPE :: execute_instruction : operands (00FFFFE8, 00000012)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000012
MEMORY WRITE : MEM[00fffff0] = 00000012
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000012
MEMORY READ : MEM[00fffff0] = 00000012
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000012, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000012
PIPE :: execute_instruction : operands (00000012, 00000012)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000012
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000088)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000088
MEMORY READ : MEM[00fffff4] = 00000099
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000099, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000099
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000012
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000012, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000012
PIPE :: execute_instruction : operands (00000099, 00000012)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000000ABPIPE :: execute_instruction : operands (00FFFFE8, 000000AB)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000000AB, Reg2 = 00000012
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000000AB, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000000ab
PIPE :: execute_instruction : operands (00FFFFE8, 000000AB)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000000AB
MEMORY WRITE : MEM[00fffff4] = 000000ab
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000000AB
MEMORY READ : MEM[00fffff0] = 00000012
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000012, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000012
PIPE :: execute_instruction : operands (00000012, 00000012)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000013PIPE :: execute_instruction : operands (00FFFFE8, 00000013)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000013, Reg2 = 00000012
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000013, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000013
PIPE :: execute_instruction : operands (00FFFFE8, 00000013)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000013
MEMORY WRITE : MEM[00fffff0] = 00000013
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000013
MEMORY READ : MEM[00fffff0] = 00000013
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000013, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000013
PIPE :: execute_instruction : operands (00000013, 00000013)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000013
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000099)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000099
MEMORY READ : MEM[00fffff4] = 000000ab
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000000AB, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000000ab
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000013
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000013, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000013
PIPE :: execute_instruction : operands (000000AB, 00000013)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000000BEPIPE :: execute_instruction : operands (00FFFFE8, 000000BE)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000000BE, Reg2 = 00000013
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000000BE, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000000be
PIPE :: execute_instruction : operands (00FFFFE8, 000000BE)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000000BE
MEMORY WRITE : MEM[00fffff4] = 000000be
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000000BE
MEMORY READ : MEM[00fffff0] = 00000013
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000013, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000013
PIPE :: execute_instruction : operands (00000013, 00000013)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000014PIPE :: execute_instruction : operands (00FFFFE8, 00000014)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000014, Reg2 = 00000013
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000014, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000014
PIPE :: execute_instruction : operands (00FFFFE8, 00000014)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000014
MEMORY WRITE : MEM[00fffff0] = 00000014
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000014
MEMORY READ : MEM[00fffff0] = 00000014
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000014, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000014
PIPE :: execute_instruction : operands (00000014, 00000014)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000014
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000000AB)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000000AB
MEMORY READ : MEM[00fffff4] = 000000be
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000000BE, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000000be
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000014
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000014, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000014
PIPE :: execute_instruction : operands (000000BE, 00000014)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000000D2PIPE :: execute_instruction : operands (00FFFFE8, 000000D2)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000000D2, Reg2 = 00000014
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000000D2, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000000d2
PIPE :: execute_instruction : operands (00FFFFE8, 000000D2)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000000D2
MEMORY WRITE : MEM[00fffff4] = 000000d2
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000000D2
MEMORY READ : MEM[00fffff0] = 00000014
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000014, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000014
PIPE :: execute_instruction : operands (00000014, 00000014)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000015PIPE :: execute_instruction : operands (00FFFFE8, 00000015)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000015, Reg2 = 00000014
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000015, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000015
PIPE :: execute_instruction : operands (00FFFFE8, 00000015)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000015
MEMORY WRITE : MEM[00fffff0] = 00000015
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000015
MEMORY READ : MEM[00fffff0] = 00000015
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000015, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000015
PIPE :: execute_instruction : operands (00000015, 00000015)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000015
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000000BE)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000000BE
MEMORY READ : MEM[00fffff4] = 000000d2
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000000D2, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000000d2
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000015
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000015, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000015
PIPE :: execute_instruction : operands (000000D2, 00000015)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000000E7PIPE :: execute_instruction : operands (00FFFFE8, 000000E7)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000000E7, Reg2 = 00000015
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000000E7, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000000e7
PIPE :: execute_instruction : operands (00FFFFE8, 000000E7)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000000E7
MEMORY WRITE : MEM[00fffff4] = 000000e7
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000000E7
MEMORY READ : MEM[00fffff0] = 00000015
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000015, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000015
PIPE :: execute_instruction : operands (00000015, 00000015)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000016PIPE :: execute_instruction : operands (00FFFFE8, 00000016)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000016, Reg2 = 00000015
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000016, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000016
PIPE :: execute_instruction : operands (00FFFFE8, 00000016)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000016
MEMORY WRITE : MEM[00fffff0] = 00000016
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000016
MEMORY READ : MEM[00fffff0] = 00000016
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000016, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000016
PIPE :: execute_instruction : operands (00000016, 00000016)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000016
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000000D2)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000000D2
MEMORY READ : MEM[00fffff4] = 000000e7
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000000E7, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000000e7
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000016
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000016, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000016
PIPE :: execute_instruction : operands (000000E7, 00000016)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000000FDPIPE :: execute_instruction : operands (00FFFFE8, 000000FD)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000000FD, Reg2 = 00000016
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000000FD, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000000fd
PIPE :: execute_instruction : operands (00FFFFE8, 000000FD)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000000FD
MEMORY WRITE : MEM[00fffff4] = 000000fd
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000000FD
MEMORY READ : MEM[00fffff0] = 00000016
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000016, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000016
PIPE :: execute_instruction : operands (00000016, 00000016)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000017PIPE :: execute_instruction : operands (00FFFFE8, 00000017)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000017, Reg2 = 00000016
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000017, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000017
PIPE :: execute_instruction : operands (00FFFFE8, 00000017)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000017
MEMORY WRITE : MEM[00fffff0] = 00000017
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000017
MEMORY READ : MEM[00fffff0] = 00000017
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000017, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000017
PIPE :: execute_instruction : operands (00000017, 00000017)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000017
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000000E7)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000000E7
MEMORY READ : MEM[00fffff4] = 000000fd
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000000FD, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000000fd
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000017
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000017, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000017
PIPE :: execute_instruction : operands (000000FD, 00000017)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000114PIPE :: execute_instruction : operands (00FFFFE8, 00000114)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000114, Reg2 = 00000017
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000114, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000114
PIPE :: execute_instruction : operands (00FFFFE8, 00000114)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000114
MEMORY WRITE : MEM[00fffff4] = 00000114
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000114
MEMORY READ : MEM[00fffff0] = 00000017
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000017, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000017
PIPE :: execute_instruction : operands (00000017, 00000017)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000018PIPE :: execute_instruction : operands (00FFFFE8, 00000018)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000018, Reg2 = 00000017
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000018, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000018
PIPE :: execute_instruction : operands (00FFFFE8, 00000018)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000018
MEMORY WRITE : MEM[00fffff0] = 00000018
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000018
MEMORY READ : MEM[00fffff0] = 00000018
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000018, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000018
PIPE :: execute_instruction : operands (00000018, 00000018)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000018
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000000FD)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000000FD
MEMORY READ : MEM[00fffff4] = 00000114
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000114, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000114
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000018
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000018, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000018
PIPE :: execute_instruction : operands (00000114, 00000018)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000012CPIPE :: execute_instruction : operands (00FFFFE8, 0000012C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000012C, Reg2 = 00000018
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000012C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000012c
PIPE :: execute_instruction : operands (00FFFFE8, 0000012C)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000012C
MEMORY WRITE : MEM[00fffff4] = 0000012c
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000012C
MEMORY READ : MEM[00fffff0] = 00000018
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000018, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000018
PIPE :: execute_instruction : operands (00000018, 00000018)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000019PIPE :: execute_instruction : operands (00FFFFE8, 00000019)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000019, Reg2 = 00000018
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000019, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000019
PIPE :: execute_instruction : operands (00FFFFE8, 00000019)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000019
MEMORY WRITE : MEM[00fffff0] = 00000019
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000019
MEMORY READ : MEM[00fffff0] = 00000019
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000019, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000019
PIPE :: execute_instruction : operands (00000019, 00000019)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000019
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000114)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000114
MEMORY READ : MEM[00fffff4] = 0000012c
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000012C, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000012c
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000019
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000019, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000019
PIPE :: execute_instruction : operands (0000012C, 00000019)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000145PIPE :: execute_instruction : operands (00FFFFE8, 00000145)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000145, Reg2 = 00000019
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000145, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000145
PIPE :: execute_instruction : operands (00FFFFE8, 00000145)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000145
MEMORY WRITE : MEM[00fffff4] = 00000145
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000145
MEMORY READ : MEM[00fffff0] = 00000019
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000019, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000019
PIPE :: execute_instruction : operands (00000019, 00000019)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000001APIPE :: execute_instruction : operands (00FFFFE8, 0000001A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000001A, Reg2 = 00000019
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000001A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001a
PIPE :: execute_instruction : operands (00FFFFE8, 0000001A)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001A
MEMORY WRITE : MEM[00fffff0] = 0000001a
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001A
MEMORY READ : MEM[00fffff0] = 0000001a
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000001A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001a
PIPE :: execute_instruction : operands (0000001A, 0000001A)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000001A
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000012C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000012C
MEMORY READ : MEM[00fffff4] = 00000145
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000145, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000145
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000001a
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000001A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001a
PIPE :: execute_instruction : operands (00000145, 0000001A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000015FPIPE :: execute_instruction : operands (00FFFFE8, 0000015F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000015F, Reg2 = 0000001A
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000015F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000015f
PIPE :: execute_instruction : operands (00FFFFE8, 0000015F)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000015F
MEMORY WRITE : MEM[00fffff4] = 0000015f
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000015F
MEMORY READ : MEM[00fffff0] = 0000001a
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000001A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001a
PIPE :: execute_instruction : operands (0000001A, 0000001A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000001BPIPE :: execute_instruction : operands (00FFFFE8, 0000001B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000001B, Reg2 = 0000001A
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000001B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001b
PIPE :: execute_instruction : operands (00FFFFE8, 0000001B)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001B
MEMORY WRITE : MEM[00fffff0] = 0000001b
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001B
MEMORY READ : MEM[00fffff0] = 0000001b
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000001B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001b
PIPE :: execute_instruction : operands (0000001B, 0000001B)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000001B
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000145)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000145
MEMORY READ : MEM[00fffff4] = 0000015f
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000015F, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000015f
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000001b
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000001B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001b
PIPE :: execute_instruction : operands (0000015F, 0000001B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000017APIPE :: execute_instruction : operands (00FFFFE8, 0000017A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000017A, Reg2 = 0000001B
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000017A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000017a
PIPE :: execute_instruction : operands (00FFFFE8, 0000017A)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000017A
MEMORY WRITE : MEM[00fffff4] = 0000017a
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000017A
MEMORY READ : MEM[00fffff0] = 0000001b
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000001B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001b
PIPE :: execute_instruction : operands (0000001B, 0000001B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000001CPIPE :: execute_instruction : operands (00FFFFE8, 0000001C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000001C, Reg2 = 0000001B
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000001C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001c
PIPE :: execute_instruction : operands (00FFFFE8, 0000001C)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001C
MEMORY WRITE : MEM[00fffff0] = 0000001c
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001C
MEMORY READ : MEM[00fffff0] = 0000001c
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000001C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001c
PIPE :: execute_instruction : operands (0000001C, 0000001C)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000001C
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000015F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000015F
MEMORY READ : MEM[00fffff4] = 0000017a
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000017A, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000017a
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000001c
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000001C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001c
PIPE :: execute_instruction : operands (0000017A, 0000001C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000196PIPE :: execute_instruction : operands (00FFFFE8, 00000196)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000196, Reg2 = 0000001C
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000196, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000196
PIPE :: execute_instruction : operands (00FFFFE8, 00000196)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000196
MEMORY WRITE : MEM[00fffff4] = 00000196
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000196
MEMORY READ : MEM[00fffff0] = 0000001c
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000001C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001c
PIPE :: execute_instruction : operands (0000001C, 0000001C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000001DPIPE :: execute_instruction : operands (00FFFFE8, 0000001D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000001D, Reg2 = 0000001C
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000001D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001d
PIPE :: execute_instruction : operands (00FFFFE8, 0000001D)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001D
MEMORY WRITE : MEM[00fffff0] = 0000001d
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001D
MEMORY READ : MEM[00fffff0] = 0000001d
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000001D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001d
PIPE :: execute_instruction : operands (0000001D, 0000001D)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000001D
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000017A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000017A
MEMORY READ : MEM[00fffff4] = 00000196
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000196, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000196
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000001d
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000001D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001d
PIPE :: execute_instruction : operands (00000196, 0000001D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000001B3PIPE :: execute_instruction : operands (00FFFFE8, 000001B3)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000001B3, Reg2 = 0000001D
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000001B3, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000001b3
PIPE :: execute_instruction : operands (00FFFFE8, 000001B3)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000001B3
MEMORY WRITE : MEM[00fffff4] = 000001b3
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000001B3
MEMORY READ : MEM[00fffff0] = 0000001d
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000001D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001d
PIPE :: execute_instruction : operands (0000001D, 0000001D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000001EPIPE :: execute_instruction : operands (00FFFFE8, 0000001E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000001E, Reg2 = 0000001D
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000001E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001e
PIPE :: execute_instruction : operands (00FFFFE8, 0000001E)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001E
MEMORY WRITE : MEM[00fffff0] = 0000001e
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001E
MEMORY READ : MEM[00fffff0] = 0000001e
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000001E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001e
PIPE :: execute_instruction : operands (0000001E, 0000001E)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000001E
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000196)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000196
MEMORY READ : MEM[00fffff4] = 000001b3
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000001B3, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000001b3
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000001e
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000001E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001e
PIPE :: execute_instruction : operands (000001B3, 0000001E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000001D1PIPE :: execute_instruction : operands (00FFFFE8, 000001D1)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000001D1, Reg2 = 0000001E
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000001D1, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000001d1
PIPE :: execute_instruction : operands (00FFFFE8, 000001D1)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000001D1
MEMORY WRITE : MEM[00fffff4] = 000001d1
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000001D1
MEMORY READ : MEM[00fffff0] = 0000001e
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000001E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001e
PIPE :: execute_instruction : operands (0000001E, 0000001E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000001FPIPE :: execute_instruction : operands (00FFFFE8, 0000001F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000001F, Reg2 = 0000001E
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000001F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001f
PIPE :: execute_instruction : operands (00FFFFE8, 0000001F)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001F
MEMORY WRITE : MEM[00fffff0] = 0000001f
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000001F
MEMORY READ : MEM[00fffff0] = 0000001f
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000001F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001f
PIPE :: execute_instruction : operands (0000001F, 0000001F)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000001F
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000001B3)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000001B3
MEMORY READ : MEM[00fffff4] = 000001d1
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000001D1, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000001d1
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000001f
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000001F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001f
PIPE :: execute_instruction : operands (000001D1, 0000001F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000001F0PIPE :: execute_instruction : operands (00FFFFE8, 000001F0)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000001F0, Reg2 = 0000001F
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000001F0, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000001f0
PIPE :: execute_instruction : operands (00FFFFE8, 000001F0)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000001F0
MEMORY WRITE : MEM[00fffff4] = 000001f0
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000001F0
MEMORY READ : MEM[00fffff0] = 0000001f
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000001F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000001f
PIPE :: execute_instruction : operands (0000001F, 0000001F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000020PIPE :: execute_instruction : operands (00FFFFE8, 00000020)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000020, Reg2 = 0000001F
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000020, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000020
PIPE :: execute_instruction : operands (00FFFFE8, 00000020)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000020
MEMORY WRITE : MEM[00fffff0] = 00000020
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000020
MEMORY READ : MEM[00fffff0] = 00000020
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000020, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000020
PIPE :: execute_instruction : operands (00000020, 00000020)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000020
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000001D1)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000001D1
MEMORY READ : MEM[00fffff4] = 000001f0
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000001F0, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000001f0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000020
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000020, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000020
PIPE :: execute_instruction : operands (000001F0, 00000020)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000210PIPE :: execute_instruction : operands (00FFFFE8, 00000210)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000210, Reg2 = 00000020
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000210, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000210
PIPE :: execute_instruction : operands (00FFFFE8, 00000210)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000210
MEMORY WRITE : MEM[00fffff4] = 00000210
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000210
MEMORY READ : MEM[00fffff0] = 00000020
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000020, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000020
PIPE :: execute_instruction : operands (00000020, 00000020)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000021PIPE :: execute_instruction : operands (00FFFFE8, 00000021)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000021, Reg2 = 00000020
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000021, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000021
PIPE :: execute_instruction : operands (00FFFFE8, 00000021)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000021
MEMORY WRITE : MEM[00fffff0] = 00000021
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000021
MEMORY READ : MEM[00fffff0] = 00000021
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000021, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000021
PIPE :: execute_instruction : operands (00000021, 00000021)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000021
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000001F0)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000001F0
MEMORY READ : MEM[00fffff4] = 00000210
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000210, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000210
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000021
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000021, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000021
PIPE :: execute_instruction : operands (00000210, 00000021)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000231PIPE :: execute_instruction : operands (00FFFFE8, 00000231)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000231, Reg2 = 00000021
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000231, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000231
PIPE :: execute_instruction : operands (00FFFFE8, 00000231)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000231
MEMORY WRITE : MEM[00fffff4] = 00000231
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000231
MEMORY READ : MEM[00fffff0] = 00000021
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000021, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000021
PIPE :: execute_instruction : operands (00000021, 00000021)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000022PIPE :: execute_instruction : operands (00FFFFE8, 00000022)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000022, Reg2 = 00000021
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000022, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000022
PIPE :: execute_instruction : operands (00FFFFE8, 00000022)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000022
MEMORY WRITE : MEM[00fffff0] = 00000022
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000022
MEMORY READ : MEM[00fffff0] = 00000022
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000022, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000022
PIPE :: execute_instruction : operands (00000022, 00000022)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000022
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000210)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000210
MEMORY READ : MEM[00fffff4] = 00000231
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000231, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000231
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000022
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000022, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000022
PIPE :: execute_instruction : operands (00000231, 00000022)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000253PIPE :: execute_instruction : operands (00FFFFE8, 00000253)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000253, Reg2 = 00000022
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000253, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000253
PIPE :: execute_instruction : operands (00FFFFE8, 00000253)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000253
MEMORY WRITE : MEM[00fffff4] = 00000253
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000253
MEMORY READ : MEM[00fffff0] = 00000022
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000022, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000022
PIPE :: execute_instruction : operands (00000022, 00000022)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000023PIPE :: execute_instruction : operands (00FFFFE8, 00000023)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000023, Reg2 = 00000022
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000023, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000023
PIPE :: execute_instruction : operands (00FFFFE8, 00000023)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000023
MEMORY WRITE : MEM[00fffff0] = 00000023
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000023
MEMORY READ : MEM[00fffff0] = 00000023
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000023, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000023
PIPE :: execute_instruction : operands (00000023, 00000023)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000023
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000231)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000231
MEMORY READ : MEM[00fffff4] = 00000253
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000253, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000253
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000023
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000023, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000023
PIPE :: execute_instruction : operands (00000253, 00000023)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000276PIPE :: execute_instruction : operands (00FFFFE8, 00000276)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000276, Reg2 = 00000023
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000276, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000276
PIPE :: execute_instruction : operands (00FFFFE8, 00000276)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000276
MEMORY WRITE : MEM[00fffff4] = 00000276
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000276
MEMORY READ : MEM[00fffff0] = 00000023
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000023, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000023
PIPE :: execute_instruction : operands (00000023, 00000023)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000024PIPE :: execute_instruction : operands (00FFFFE8, 00000024)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000024, Reg2 = 00000023
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000024, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000024
PIPE :: execute_instruction : operands (00FFFFE8, 00000024)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000024
MEMORY WRITE : MEM[00fffff0] = 00000024
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000024
MEMORY READ : MEM[00fffff0] = 00000024
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000024, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000024
PIPE :: execute_instruction : operands (00000024, 00000024)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000024
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000253)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000253
MEMORY READ : MEM[00fffff4] = 00000276
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000276, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000276
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000024
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000024, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000024
PIPE :: execute_instruction : operands (00000276, 00000024)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000029APIPE :: execute_instruction : operands (00FFFFE8, 0000029A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000029A, Reg2 = 00000024
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000029A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000029a
PIPE :: execute_instruction : operands (00FFFFE8, 0000029A)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000029A
MEMORY WRITE : MEM[00fffff4] = 0000029a
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000029A
MEMORY READ : MEM[00fffff0] = 00000024
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000024, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000024
PIPE :: execute_instruction : operands (00000024, 00000024)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000025PIPE :: execute_instruction : operands (00FFFFE8, 00000025)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000025, Reg2 = 00000024
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000025, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000025
PIPE :: execute_instruction : operands (00FFFFE8, 00000025)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000025
MEMORY WRITE : MEM[00fffff0] = 00000025
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000025
MEMORY READ : MEM[00fffff0] = 00000025
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000025, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000025
PIPE :: execute_instruction : operands (00000025, 00000025)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000025
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000276)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000276
MEMORY READ : MEM[00fffff4] = 0000029a
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000029A, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000029a
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000025
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000025, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000025
PIPE :: execute_instruction : operands (0000029A, 00000025)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000002BFPIPE :: execute_instruction : operands (00FFFFE8, 000002BF)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000002BF, Reg2 = 00000025
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000002BF, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000002bf
PIPE :: execute_instruction : operands (00FFFFE8, 000002BF)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000002BF
MEMORY WRITE : MEM[00fffff4] = 000002bf
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000002BF
MEMORY READ : MEM[00fffff0] = 00000025
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000025, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000025
PIPE :: execute_instruction : operands (00000025, 00000025)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000026PIPE :: execute_instruction : operands (00FFFFE8, 00000026)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000026, Reg2 = 00000025
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000026, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000026
PIPE :: execute_instruction : operands (00FFFFE8, 00000026)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000026
MEMORY WRITE : MEM[00fffff0] = 00000026
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000026
MEMORY READ : MEM[00fffff0] = 00000026
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000026, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000026
PIPE :: execute_instruction : operands (00000026, 00000026)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000026
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000029A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000029A
MEMORY READ : MEM[00fffff4] = 000002bf
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000002BF, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000002bf
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000026
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000026, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000026
PIPE :: execute_instruction : operands (000002BF, 00000026)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000002E5PIPE :: execute_instruction : operands (00FFFFE8, 000002E5)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000002E5, Reg2 = 00000026
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000002E5, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000002e5
PIPE :: execute_instruction : operands (00FFFFE8, 000002E5)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000002E5
MEMORY WRITE : MEM[00fffff4] = 000002e5
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000002E5
MEMORY READ : MEM[00fffff0] = 00000026
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000026, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000026
PIPE :: execute_instruction : operands (00000026, 00000026)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000027PIPE :: execute_instruction : operands (00FFFFE8, 00000027)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000027, Reg2 = 00000026
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000027, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000027
PIPE :: execute_instruction : operands (00FFFFE8, 00000027)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000027
MEMORY WRITE : MEM[00fffff0] = 00000027
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000027
MEMORY READ : MEM[00fffff0] = 00000027
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000027, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000027
PIPE :: execute_instruction : operands (00000027, 00000027)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000027
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000002BF)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000002BF
MEMORY READ : MEM[00fffff4] = 000002e5
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000002E5, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000002e5
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000027
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000027, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000027
PIPE :: execute_instruction : operands (000002E5, 00000027)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000030CPIPE :: execute_instruction : operands (00FFFFE8, 0000030C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000030C, Reg2 = 00000027
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000030C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000030c
PIPE :: execute_instruction : operands (00FFFFE8, 0000030C)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000030C
MEMORY WRITE : MEM[00fffff4] = 0000030c
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000030C
MEMORY READ : MEM[00fffff0] = 00000027
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000027, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000027
PIPE :: execute_instruction : operands (00000027, 00000027)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000028PIPE :: execute_instruction : operands (00FFFFE8, 00000028)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000028, Reg2 = 00000027
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000028, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000028
PIPE :: execute_instruction : operands (00FFFFE8, 00000028)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000028
MEMORY WRITE : MEM[00fffff0] = 00000028
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000028
MEMORY READ : MEM[00fffff0] = 00000028
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000028, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000028
PIPE :: execute_instruction : operands (00000028, 00000028)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000028
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000002E5)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000002E5
MEMORY READ : MEM[00fffff4] = 0000030c
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000030C, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000030c
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000028
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000028, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000028
PIPE :: execute_instruction : operands (0000030C, 00000028)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000334PIPE :: execute_instruction : operands (00FFFFE8, 00000334)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000334, Reg2 = 00000028
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000334, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000334
PIPE :: execute_instruction : operands (00FFFFE8, 00000334)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000334
MEMORY WRITE : MEM[00fffff4] = 00000334
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000334
MEMORY READ : MEM[00fffff0] = 00000028
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000028, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000028
PIPE :: execute_instruction : operands (00000028, 00000028)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000029PIPE :: execute_instruction : operands (00FFFFE8, 00000029)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000029, Reg2 = 00000028
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000029, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000029
PIPE :: execute_instruction : operands (00FFFFE8, 00000029)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000029
MEMORY WRITE : MEM[00fffff0] = 00000029
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000029
MEMORY READ : MEM[00fffff0] = 00000029
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000029, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000029
PIPE :: execute_instruction : operands (00000029, 00000029)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000029
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000030C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000030C
MEMORY READ : MEM[00fffff4] = 00000334
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000334, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000334
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000029
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000029, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000029
PIPE :: execute_instruction : operands (00000334, 00000029)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000035DPIPE :: execute_instruction : operands (00FFFFE8, 0000035D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000035D, Reg2 = 00000029
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000035D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000035d
PIPE :: execute_instruction : operands (00FFFFE8, 0000035D)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000035D
MEMORY WRITE : MEM[00fffff4] = 0000035d
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000035D
MEMORY READ : MEM[00fffff0] = 00000029
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000029, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000029
PIPE :: execute_instruction : operands (00000029, 00000029)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000002APIPE :: execute_instruction : operands (00FFFFE8, 0000002A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000002A, Reg2 = 00000029
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000002A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002a
PIPE :: execute_instruction : operands (00FFFFE8, 0000002A)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002A
MEMORY WRITE : MEM[00fffff0] = 0000002a
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002A
MEMORY READ : MEM[00fffff0] = 0000002a
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000002A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002a
PIPE :: execute_instruction : operands (0000002A, 0000002A)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000002A
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000334)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000334
MEMORY READ : MEM[00fffff4] = 0000035d
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000035D, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000035d
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000002a
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000002A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002a
PIPE :: execute_instruction : operands (0000035D, 0000002A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000387PIPE :: execute_instruction : operands (00FFFFE8, 00000387)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000387, Reg2 = 0000002A
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000387, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000387
PIPE :: execute_instruction : operands (00FFFFE8, 00000387)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000387
MEMORY WRITE : MEM[00fffff4] = 00000387
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000387
MEMORY READ : MEM[00fffff0] = 0000002a
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000002A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002a
PIPE :: execute_instruction : operands (0000002A, 0000002A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000002BPIPE :: execute_instruction : operands (00FFFFE8, 0000002B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000002B, Reg2 = 0000002A
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000002B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002b
PIPE :: execute_instruction : operands (00FFFFE8, 0000002B)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002B
MEMORY WRITE : MEM[00fffff0] = 0000002b
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002B
MEMORY READ : MEM[00fffff0] = 0000002b
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000002B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002b
PIPE :: execute_instruction : operands (0000002B, 0000002B)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000002B
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000035D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000035D
MEMORY READ : MEM[00fffff4] = 00000387
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000387, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000387
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000002b
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000002B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002b
PIPE :: execute_instruction : operands (00000387, 0000002B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000003B2PIPE :: execute_instruction : operands (00FFFFE8, 000003B2)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000003B2, Reg2 = 0000002B
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000003B2, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000003b2
PIPE :: execute_instruction : operands (00FFFFE8, 000003B2)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000003B2
MEMORY WRITE : MEM[00fffff4] = 000003b2
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000003B2
MEMORY READ : MEM[00fffff0] = 0000002b
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000002B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002b
PIPE :: execute_instruction : operands (0000002B, 0000002B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000002CPIPE :: execute_instruction : operands (00FFFFE8, 0000002C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000002C, Reg2 = 0000002B
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000002C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002c
PIPE :: execute_instruction : operands (00FFFFE8, 0000002C)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002C
MEMORY WRITE : MEM[00fffff0] = 0000002c
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002C
MEMORY READ : MEM[00fffff0] = 0000002c
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000002C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002c
PIPE :: execute_instruction : operands (0000002C, 0000002C)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000002C
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000387)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000387
MEMORY READ : MEM[00fffff4] = 000003b2
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000003B2, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000003b2
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000002c
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000002C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002c
PIPE :: execute_instruction : operands (000003B2, 0000002C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000003DEPIPE :: execute_instruction : operands (00FFFFE8, 000003DE)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000003DE, Reg2 = 0000002C
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000003DE, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000003de
PIPE :: execute_instruction : operands (00FFFFE8, 000003DE)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000003DE
MEMORY WRITE : MEM[00fffff4] = 000003de
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000003DE
MEMORY READ : MEM[00fffff0] = 0000002c
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000002C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002c
PIPE :: execute_instruction : operands (0000002C, 0000002C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000002DPIPE :: execute_instruction : operands (00FFFFE8, 0000002D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000002D, Reg2 = 0000002C
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000002D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002d
PIPE :: execute_instruction : operands (00FFFFE8, 0000002D)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002D
MEMORY WRITE : MEM[00fffff0] = 0000002d
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002D
MEMORY READ : MEM[00fffff0] = 0000002d
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000002D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002d
PIPE :: execute_instruction : operands (0000002D, 0000002D)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000002D
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000003B2)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000003B2
MEMORY READ : MEM[00fffff4] = 000003de
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000003DE, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000003de
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000002d
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000002D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002d
PIPE :: execute_instruction : operands (000003DE, 0000002D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000040BPIPE :: execute_instruction : operands (00FFFFE8, 0000040B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000040B, Reg2 = 0000002D
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000040B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000040b
PIPE :: execute_instruction : operands (00FFFFE8, 0000040B)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000040B
MEMORY WRITE : MEM[00fffff4] = 0000040b
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000040B
MEMORY READ : MEM[00fffff0] = 0000002d
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000002D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002d
PIPE :: execute_instruction : operands (0000002D, 0000002D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000002EPIPE :: execute_instruction : operands (00FFFFE8, 0000002E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000002E, Reg2 = 0000002D
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000002E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002e
PIPE :: execute_instruction : operands (00FFFFE8, 0000002E)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002E
MEMORY WRITE : MEM[00fffff0] = 0000002e
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002E
MEMORY READ : MEM[00fffff0] = 0000002e
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000002E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002e
PIPE :: execute_instruction : operands (0000002E, 0000002E)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000002E
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000003DE)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000003DE
MEMORY READ : MEM[00fffff4] = 0000040b
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000040B, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000040b
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000002e
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000002E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002e
PIPE :: execute_instruction : operands (0000040B, 0000002E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000439PIPE :: execute_instruction : operands (00FFFFE8, 00000439)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000439, Reg2 = 0000002E
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000439, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000439
PIPE :: execute_instruction : operands (00FFFFE8, 00000439)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000439
MEMORY WRITE : MEM[00fffff4] = 00000439
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000439
MEMORY READ : MEM[00fffff0] = 0000002e
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000002E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002e
PIPE :: execute_instruction : operands (0000002E, 0000002E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000002FPIPE :: execute_instruction : operands (00FFFFE8, 0000002F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000002F, Reg2 = 0000002E
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000002F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002f
PIPE :: execute_instruction : operands (00FFFFE8, 0000002F)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002F
MEMORY WRITE : MEM[00fffff0] = 0000002f
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000002F
MEMORY READ : MEM[00fffff0] = 0000002f
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000002F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002f
PIPE :: execute_instruction : operands (0000002F, 0000002F)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000002F
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000040B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000040B
MEMORY READ : MEM[00fffff4] = 00000439
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000439, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000439
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000002f
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000002F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002f
PIPE :: execute_instruction : operands (00000439, 0000002F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000468PIPE :: execute_instruction : operands (00FFFFE8, 00000468)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000468, Reg2 = 0000002F
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000468, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000468
PIPE :: execute_instruction : operands (00FFFFE8, 00000468)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000468
MEMORY WRITE : MEM[00fffff4] = 00000468
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000468
MEMORY READ : MEM[00fffff0] = 0000002f
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000002F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000002f
PIPE :: execute_instruction : operands (0000002F, 0000002F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000030PIPE :: execute_instruction : operands (00FFFFE8, 00000030)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000030, Reg2 = 0000002F
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000030, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000030
PIPE :: execute_instruction : operands (00FFFFE8, 00000030)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000030
MEMORY WRITE : MEM[00fffff0] = 00000030
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000030
MEMORY READ : MEM[00fffff0] = 00000030
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000030, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000030
PIPE :: execute_instruction : operands (00000030, 00000030)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000030
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000439)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000439
MEMORY READ : MEM[00fffff4] = 00000468
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000468, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000468
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000030
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000030, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000030
PIPE :: execute_instruction : operands (00000468, 00000030)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000498PIPE :: execute_instruction : operands (00FFFFE8, 00000498)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000498, Reg2 = 00000030
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000498, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000498
PIPE :: execute_instruction : operands (00FFFFE8, 00000498)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000498
MEMORY WRITE : MEM[00fffff4] = 00000498
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000498
MEMORY READ : MEM[00fffff0] = 00000030
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000030, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000030
PIPE :: execute_instruction : operands (00000030, 00000030)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000031PIPE :: execute_instruction : operands (00FFFFE8, 00000031)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000031, Reg2 = 00000030
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000031, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000031
PIPE :: execute_instruction : operands (00FFFFE8, 00000031)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000031
MEMORY WRITE : MEM[00fffff0] = 00000031
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000031
MEMORY READ : MEM[00fffff0] = 00000031
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000031, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000031
PIPE :: execute_instruction : operands (00000031, 00000031)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000031
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000468)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000468
MEMORY READ : MEM[00fffff4] = 00000498
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000498, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000498
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000031
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000031, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000031
PIPE :: execute_instruction : operands (00000498, 00000031)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000004C9PIPE :: execute_instruction : operands (00FFFFE8, 000004C9)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000004C9, Reg2 = 00000031
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000004C9, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000004c9
PIPE :: execute_instruction : operands (00FFFFE8, 000004C9)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000004C9
MEMORY WRITE : MEM[00fffff4] = 000004c9
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000004C9
MEMORY READ : MEM[00fffff0] = 00000031
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000031, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000031
PIPE :: execute_instruction : operands (00000031, 00000031)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000032PIPE :: execute_instruction : operands (00FFFFE8, 00000032)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000032, Reg2 = 00000031
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000032, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000032
PIPE :: execute_instruction : operands (00FFFFE8, 00000032)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000032
MEMORY WRITE : MEM[00fffff0] = 00000032
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000032
MEMORY READ : MEM[00fffff0] = 00000032
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000032, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000032
PIPE :: execute_instruction : operands (00000032, 00000032)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000032
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000498)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000498
MEMORY READ : MEM[00fffff4] = 000004c9
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000004C9, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000004c9
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000032
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000032, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000032
PIPE :: execute_instruction : operands (000004C9, 00000032)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000004FBPIPE :: execute_instruction : operands (00FFFFE8, 000004FB)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000004FB, Reg2 = 00000032
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000004FB, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000004fb
PIPE :: execute_instruction : operands (00FFFFE8, 000004FB)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000004FB
MEMORY WRITE : MEM[00fffff4] = 000004fb
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000004FB
MEMORY READ : MEM[00fffff0] = 00000032
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000032, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000032
PIPE :: execute_instruction : operands (00000032, 00000032)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000033PIPE :: execute_instruction : operands (00FFFFE8, 00000033)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000033, Reg2 = 00000032
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000033, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000033
PIPE :: execute_instruction : operands (00FFFFE8, 00000033)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000033
MEMORY WRITE : MEM[00fffff0] = 00000033
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000033
MEMORY READ : MEM[00fffff0] = 00000033
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000033, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000033
PIPE :: execute_instruction : operands (00000033, 00000033)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000033
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000004C9)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000004C9
MEMORY READ : MEM[00fffff4] = 000004fb
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000004FB, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000004fb
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000033
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000033, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000033
PIPE :: execute_instruction : operands (000004FB, 00000033)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000052EPIPE :: execute_instruction : operands (00FFFFE8, 0000052E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000052E, Reg2 = 00000033
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000052E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000052e
PIPE :: execute_instruction : operands (00FFFFE8, 0000052E)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000052E
MEMORY WRITE : MEM[00fffff4] = 0000052e
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000052E
MEMORY READ : MEM[00fffff0] = 00000033
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000033, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000033
PIPE :: execute_instruction : operands (00000033, 00000033)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000034PIPE :: execute_instruction : operands (00FFFFE8, 00000034)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000034, Reg2 = 00000033
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000034, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000034
PIPE :: execute_instruction : operands (00FFFFE8, 00000034)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000034
MEMORY WRITE : MEM[00fffff0] = 00000034
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000034
MEMORY READ : MEM[00fffff0] = 00000034
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000034, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000034
PIPE :: execute_instruction : operands (00000034, 00000034)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000034
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000004FB)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000004FB
MEMORY READ : MEM[00fffff4] = 0000052e
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000052E, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000052e
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000034
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000034, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000034
PIPE :: execute_instruction : operands (0000052E, 00000034)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000562PIPE :: execute_instruction : operands (00FFFFE8, 00000562)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000562, Reg2 = 00000034
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000562, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000562
PIPE :: execute_instruction : operands (00FFFFE8, 00000562)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000562
MEMORY WRITE : MEM[00fffff4] = 00000562
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000562
MEMORY READ : MEM[00fffff0] = 00000034
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000034, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000034
PIPE :: execute_instruction : operands (00000034, 00000034)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000035PIPE :: execute_instruction : operands (00FFFFE8, 00000035)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000035, Reg2 = 00000034
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000035, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000035
PIPE :: execute_instruction : operands (00FFFFE8, 00000035)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000035
MEMORY WRITE : MEM[00fffff0] = 00000035
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000035
MEMORY READ : MEM[00fffff0] = 00000035
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000035, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000035
PIPE :: execute_instruction : operands (00000035, 00000035)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000035
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000052E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000052E
MEMORY READ : MEM[00fffff4] = 00000562
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000562, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000562
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000035
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000035, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000035
PIPE :: execute_instruction : operands (00000562, 00000035)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000597PIPE :: execute_instruction : operands (00FFFFE8, 00000597)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000597, Reg2 = 00000035
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000597, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000597
PIPE :: execute_instruction : operands (00FFFFE8, 00000597)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000597
MEMORY WRITE : MEM[00fffff4] = 00000597
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000597
MEMORY READ : MEM[00fffff0] = 00000035
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000035, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000035
PIPE :: execute_instruction : operands (00000035, 00000035)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000036PIPE :: execute_instruction : operands (00FFFFE8, 00000036)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000036, Reg2 = 00000035
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000036, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000036
PIPE :: execute_instruction : operands (00FFFFE8, 00000036)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000036
MEMORY WRITE : MEM[00fffff0] = 00000036
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000036
MEMORY READ : MEM[00fffff0] = 00000036
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000036, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000036
PIPE :: execute_instruction : operands (00000036, 00000036)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000036
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000562)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000562
MEMORY READ : MEM[00fffff4] = 00000597
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000597, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000597
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000036
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000036, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000036
PIPE :: execute_instruction : operands (00000597, 00000036)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000005CDPIPE :: execute_instruction : operands (00FFFFE8, 000005CD)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000005CD, Reg2 = 00000036
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000005CD, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000005cd
PIPE :: execute_instruction : operands (00FFFFE8, 000005CD)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000005CD
MEMORY WRITE : MEM[00fffff4] = 000005cd
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000005CD
MEMORY READ : MEM[00fffff0] = 00000036
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000036, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000036
PIPE :: execute_instruction : operands (00000036, 00000036)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000037PIPE :: execute_instruction : operands (00FFFFE8, 00000037)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000037, Reg2 = 00000036
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000037, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000037
PIPE :: execute_instruction : operands (00FFFFE8, 00000037)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000037
MEMORY WRITE : MEM[00fffff0] = 00000037
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000037
MEMORY READ : MEM[00fffff0] = 00000037
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000037, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000037
PIPE :: execute_instruction : operands (00000037, 00000037)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000037
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000597)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000597
MEMORY READ : MEM[00fffff4] = 000005cd
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000005CD, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000005cd
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000037
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000037, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000037
PIPE :: execute_instruction : operands (000005CD, 00000037)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000604PIPE :: execute_instruction : operands (00FFFFE8, 00000604)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000604, Reg2 = 00000037
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000604, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000604
PIPE :: execute_instruction : operands (00FFFFE8, 00000604)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000604
MEMORY WRITE : MEM[00fffff4] = 00000604
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000604
MEMORY READ : MEM[00fffff0] = 00000037
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000037, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000037
PIPE :: execute_instruction : operands (00000037, 00000037)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000038PIPE :: execute_instruction : operands (00FFFFE8, 00000038)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000038, Reg2 = 00000037
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000038, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000038
PIPE :: execute_instruction : operands (00FFFFE8, 00000038)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000038
MEMORY WRITE : MEM[00fffff0] = 00000038
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000038
MEMORY READ : MEM[00fffff0] = 00000038
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000038, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000038
PIPE :: execute_instruction : operands (00000038, 00000038)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000038
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000005CD)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000005CD
MEMORY READ : MEM[00fffff4] = 00000604
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000604, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000604
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000038
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000038, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000038
PIPE :: execute_instruction : operands (00000604, 00000038)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000063CPIPE :: execute_instruction : operands (00FFFFE8, 0000063C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000063C, Reg2 = 00000038
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000063C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000063c
PIPE :: execute_instruction : operands (00FFFFE8, 0000063C)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000063C
MEMORY WRITE : MEM[00fffff4] = 0000063c
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000063C
MEMORY READ : MEM[00fffff0] = 00000038
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000038, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000038
PIPE :: execute_instruction : operands (00000038, 00000038)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000039PIPE :: execute_instruction : operands (00FFFFE8, 00000039)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000039, Reg2 = 00000038
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000039, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000039
PIPE :: execute_instruction : operands (00FFFFE8, 00000039)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000039
MEMORY WRITE : MEM[00fffff0] = 00000039
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000039
MEMORY READ : MEM[00fffff0] = 00000039
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000039, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000039
PIPE :: execute_instruction : operands (00000039, 00000039)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000039
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000604)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000604
MEMORY READ : MEM[00fffff4] = 0000063c
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000063C, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000063c
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000039
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000039, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000039
PIPE :: execute_instruction : operands (0000063C, 00000039)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000675PIPE :: execute_instruction : operands (00FFFFE8, 00000675)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000675, Reg2 = 00000039
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000675, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000675
PIPE :: execute_instruction : operands (00FFFFE8, 00000675)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000675
MEMORY WRITE : MEM[00fffff4] = 00000675
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000675
MEMORY READ : MEM[00fffff0] = 00000039
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000039, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000039
PIPE :: execute_instruction : operands (00000039, 00000039)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000003APIPE :: execute_instruction : operands (00FFFFE8, 0000003A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000003A, Reg2 = 00000039
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000003A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003a
PIPE :: execute_instruction : operands (00FFFFE8, 0000003A)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003A
MEMORY WRITE : MEM[00fffff0] = 0000003a
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003A
MEMORY READ : MEM[00fffff0] = 0000003a
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000003A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003a
PIPE :: execute_instruction : operands (0000003A, 0000003A)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000003A
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000063C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000063C
MEMORY READ : MEM[00fffff4] = 00000675
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000675, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000675
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000003a
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000003A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003a
PIPE :: execute_instruction : operands (00000675, 0000003A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000006AFPIPE :: execute_instruction : operands (00FFFFE8, 000006AF)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000006AF, Reg2 = 0000003A
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000006AF, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000006af
PIPE :: execute_instruction : operands (00FFFFE8, 000006AF)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000006AF
MEMORY WRITE : MEM[00fffff4] = 000006af
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000006AF
MEMORY READ : MEM[00fffff0] = 0000003a
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000003A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003a
PIPE :: execute_instruction : operands (0000003A, 0000003A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000003BPIPE :: execute_instruction : operands (00FFFFE8, 0000003B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000003B, Reg2 = 0000003A
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000003B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003b
PIPE :: execute_instruction : operands (00FFFFE8, 0000003B)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003B
MEMORY WRITE : MEM[00fffff0] = 0000003b
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003B
MEMORY READ : MEM[00fffff0] = 0000003b
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000003B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003b
PIPE :: execute_instruction : operands (0000003B, 0000003B)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000003B
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000675)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000675
MEMORY READ : MEM[00fffff4] = 000006af
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000006AF, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000006af
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000003b
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000003B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003b
PIPE :: execute_instruction : operands (000006AF, 0000003B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000006EAPIPE :: execute_instruction : operands (00FFFFE8, 000006EA)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000006EA, Reg2 = 0000003B
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000006EA, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000006ea
PIPE :: execute_instruction : operands (00FFFFE8, 000006EA)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000006EA
MEMORY WRITE : MEM[00fffff4] = 000006ea
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000006EA
MEMORY READ : MEM[00fffff0] = 0000003b
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000003B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003b
PIPE :: execute_instruction : operands (0000003B, 0000003B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000003CPIPE :: execute_instruction : operands (00FFFFE8, 0000003C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000003C, Reg2 = 0000003B
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000003C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003c
PIPE :: execute_instruction : operands (00FFFFE8, 0000003C)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003C
MEMORY WRITE : MEM[00fffff0] = 0000003c
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003C
MEMORY READ : MEM[00fffff0] = 0000003c
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000003C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003c
PIPE :: execute_instruction : operands (0000003C, 0000003C)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000003C
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000006AF)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000006AF
MEMORY READ : MEM[00fffff4] = 000006ea
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000006EA, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000006ea
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000003c
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000003C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003c
PIPE :: execute_instruction : operands (000006EA, 0000003C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000726PIPE :: execute_instruction : operands (00FFFFE8, 00000726)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000726, Reg2 = 0000003C
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000726, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000726
PIPE :: execute_instruction : operands (00FFFFE8, 00000726)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000726
MEMORY WRITE : MEM[00fffff4] = 00000726
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000726
MEMORY READ : MEM[00fffff0] = 0000003c
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000003C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003c
PIPE :: execute_instruction : operands (0000003C, 0000003C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000003DPIPE :: execute_instruction : operands (00FFFFE8, 0000003D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000003D, Reg2 = 0000003C
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000003D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003d
PIPE :: execute_instruction : operands (00FFFFE8, 0000003D)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003D
MEMORY WRITE : MEM[00fffff0] = 0000003d
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003D
MEMORY READ : MEM[00fffff0] = 0000003d
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000003D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003d
PIPE :: execute_instruction : operands (0000003D, 0000003D)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000003D
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000006EA)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000006EA
MEMORY READ : MEM[00fffff4] = 00000726
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000726, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000726
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000003d
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000003D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003d
PIPE :: execute_instruction : operands (00000726, 0000003D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000763PIPE :: execute_instruction : operands (00FFFFE8, 00000763)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000763, Reg2 = 0000003D
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000763, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000763
PIPE :: execute_instruction : operands (00FFFFE8, 00000763)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000763
MEMORY WRITE : MEM[00fffff4] = 00000763
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000763
MEMORY READ : MEM[00fffff0] = 0000003d
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000003D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003d
PIPE :: execute_instruction : operands (0000003D, 0000003D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000003EPIPE :: execute_instruction : operands (00FFFFE8, 0000003E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000003E, Reg2 = 0000003D
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000003E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003e
PIPE :: execute_instruction : operands (00FFFFE8, 0000003E)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003E
MEMORY WRITE : MEM[00fffff0] = 0000003e
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003E
MEMORY READ : MEM[00fffff0] = 0000003e
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000003E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003e
PIPE :: execute_instruction : operands (0000003E, 0000003E)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000003E
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000726)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000726
MEMORY READ : MEM[00fffff4] = 00000763
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000763, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000763
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000003e
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000003E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003e
PIPE :: execute_instruction : operands (00000763, 0000003E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000007A1PIPE :: execute_instruction : operands (00FFFFE8, 000007A1)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000007A1, Reg2 = 0000003E
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000007A1, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000007a1
PIPE :: execute_instruction : operands (00FFFFE8, 000007A1)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000007A1
MEMORY WRITE : MEM[00fffff4] = 000007a1
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000007A1
MEMORY READ : MEM[00fffff0] = 0000003e
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000003E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003e
PIPE :: execute_instruction : operands (0000003E, 0000003E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000003FPIPE :: execute_instruction : operands (00FFFFE8, 0000003F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000003F, Reg2 = 0000003E
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000003F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003f
PIPE :: execute_instruction : operands (00FFFFE8, 0000003F)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003F
MEMORY WRITE : MEM[00fffff0] = 0000003f
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000003F
MEMORY READ : MEM[00fffff0] = 0000003f
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000003F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003f
PIPE :: execute_instruction : operands (0000003F, 0000003F)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000003F
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000763)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000763
MEMORY READ : MEM[00fffff4] = 000007a1
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000007A1, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000007a1
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000003f
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000003F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003f
PIPE :: execute_instruction : operands (000007A1, 0000003F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000007E0PIPE :: execute_instruction : operands (00FFFFE8, 000007E0)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000007E0, Reg2 = 0000003F
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000007E0, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000007e0
PIPE :: execute_instruction : operands (00FFFFE8, 000007E0)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000007E0
MEMORY WRITE : MEM[00fffff4] = 000007e0
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000007E0
MEMORY READ : MEM[00fffff0] = 0000003f
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000003F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000003f
PIPE :: execute_instruction : operands (0000003F, 0000003F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000040PIPE :: execute_instruction : operands (00FFFFE8, 00000040)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000040, Reg2 = 0000003F
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000040, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000040
PIPE :: execute_instruction : operands (00FFFFE8, 00000040)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000040
MEMORY WRITE : MEM[00fffff0] = 00000040
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000040
MEMORY READ : MEM[00fffff0] = 00000040
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000040, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000040
PIPE :: execute_instruction : operands (00000040, 00000040)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000040
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000007A1)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000007A1
MEMORY READ : MEM[00fffff4] = 000007e0
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000007E0, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000007e0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000040
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000040, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000040
PIPE :: execute_instruction : operands (000007E0, 00000040)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000820PIPE :: execute_instruction : operands (00FFFFE8, 00000820)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000820, Reg2 = 00000040
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000820, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000820
PIPE :: execute_instruction : operands (00FFFFE8, 00000820)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000820
MEMORY WRITE : MEM[00fffff4] = 00000820
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000820
MEMORY READ : MEM[00fffff0] = 00000040
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000040, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000040
PIPE :: execute_instruction : operands (00000040, 00000040)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000041PIPE :: execute_instruction : operands (00FFFFE8, 00000041)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000041, Reg2 = 00000040
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000041, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000041
PIPE :: execute_instruction : operands (00FFFFE8, 00000041)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000041
MEMORY WRITE : MEM[00fffff0] = 00000041
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000041
MEMORY READ : MEM[00fffff0] = 00000041
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000041, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000041
PIPE :: execute_instruction : operands (00000041, 00000041)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000041
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000007E0)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000007E0
MEMORY READ : MEM[00fffff4] = 00000820
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000820, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000820
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000041
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000041, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000041
PIPE :: execute_instruction : operands (00000820, 00000041)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000861PIPE :: execute_instruction : operands (00FFFFE8, 00000861)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000861, Reg2 = 00000041
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000861, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000861
PIPE :: execute_instruction : operands (00FFFFE8, 00000861)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000861
MEMORY WRITE : MEM[00fffff4] = 00000861
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000861
MEMORY READ : MEM[00fffff0] = 00000041
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000041, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000041
PIPE :: execute_instruction : operands (00000041, 00000041)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000042PIPE :: execute_instruction : operands (00FFFFE8, 00000042)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000042, Reg2 = 00000041
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000042, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000042
PIPE :: execute_instruction : operands (00FFFFE8, 00000042)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000042
MEMORY WRITE : MEM[00fffff0] = 00000042
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000042
MEMORY READ : MEM[00fffff0] = 00000042
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000042, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000042
PIPE :: execute_instruction : operands (00000042, 00000042)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000042
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000820)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000820
MEMORY READ : MEM[00fffff4] = 00000861
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000861, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000861
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000042
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000042, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000042
PIPE :: execute_instruction : operands (00000861, 00000042)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000008A3PIPE :: execute_instruction : operands (00FFFFE8, 000008A3)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000008A3, Reg2 = 00000042
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000008A3, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000008a3
PIPE :: execute_instruction : operands (00FFFFE8, 000008A3)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000008A3
MEMORY WRITE : MEM[00fffff4] = 000008a3
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000008A3
MEMORY READ : MEM[00fffff0] = 00000042
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000042, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000042
PIPE :: execute_instruction : operands (00000042, 00000042)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000043PIPE :: execute_instruction : operands (00FFFFE8, 00000043)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000043, Reg2 = 00000042
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000043, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000043
PIPE :: execute_instruction : operands (00FFFFE8, 00000043)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000043
MEMORY WRITE : MEM[00fffff0] = 00000043
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000043
MEMORY READ : MEM[00fffff0] = 00000043
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000043, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000043
PIPE :: execute_instruction : operands (00000043, 00000043)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000043
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000861)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000861
MEMORY READ : MEM[00fffff4] = 000008a3
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000008A3, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000008a3
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000043
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000043, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000043
PIPE :: execute_instruction : operands (000008A3, 00000043)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000008E6PIPE :: execute_instruction : operands (00FFFFE8, 000008E6)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000008E6, Reg2 = 00000043
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000008E6, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000008e6
PIPE :: execute_instruction : operands (00FFFFE8, 000008E6)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000008E6
MEMORY WRITE : MEM[00fffff4] = 000008e6
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000008E6
MEMORY READ : MEM[00fffff0] = 00000043
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000043, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000043
PIPE :: execute_instruction : operands (00000043, 00000043)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000044PIPE :: execute_instruction : operands (00FFFFE8, 00000044)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000044, Reg2 = 00000043
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000044, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000044
PIPE :: execute_instruction : operands (00FFFFE8, 00000044)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000044
MEMORY WRITE : MEM[00fffff0] = 00000044
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000044
MEMORY READ : MEM[00fffff0] = 00000044
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000044, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000044
PIPE :: execute_instruction : operands (00000044, 00000044)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000044
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000008A3)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000008A3
MEMORY READ : MEM[00fffff4] = 000008e6
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000008E6, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000008e6
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000044
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000044, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000044
PIPE :: execute_instruction : operands (000008E6, 00000044)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000092APIPE :: execute_instruction : operands (00FFFFE8, 0000092A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000092A, Reg2 = 00000044
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000092A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000092a
PIPE :: execute_instruction : operands (00FFFFE8, 0000092A)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000092A
MEMORY WRITE : MEM[00fffff4] = 0000092a
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000092A
MEMORY READ : MEM[00fffff0] = 00000044
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000044, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000044
PIPE :: execute_instruction : operands (00000044, 00000044)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000045PIPE :: execute_instruction : operands (00FFFFE8, 00000045)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000045, Reg2 = 00000044
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000045, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000045
PIPE :: execute_instruction : operands (00FFFFE8, 00000045)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000045
MEMORY WRITE : MEM[00fffff0] = 00000045
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000045
MEMORY READ : MEM[00fffff0] = 00000045
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000045, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000045
PIPE :: execute_instruction : operands (00000045, 00000045)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000045
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000008E6)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000008E6
MEMORY READ : MEM[00fffff4] = 0000092a
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000092A, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000092a
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000045
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000045, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000045
PIPE :: execute_instruction : operands (0000092A, 00000045)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000096FPIPE :: execute_instruction : operands (00FFFFE8, 0000096F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000096F, Reg2 = 00000045
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000096F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000096f
PIPE :: execute_instruction : operands (00FFFFE8, 0000096F)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000096F
MEMORY WRITE : MEM[00fffff4] = 0000096f
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000096F
MEMORY READ : MEM[00fffff0] = 00000045
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000045, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000045
PIPE :: execute_instruction : operands (00000045, 00000045)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000046PIPE :: execute_instruction : operands (00FFFFE8, 00000046)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000046, Reg2 = 00000045
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000046, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000046
PIPE :: execute_instruction : operands (00FFFFE8, 00000046)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000046
MEMORY WRITE : MEM[00fffff0] = 00000046
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000046
MEMORY READ : MEM[00fffff0] = 00000046
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000046, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000046
PIPE :: execute_instruction : operands (00000046, 00000046)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000046
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000092A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000092A
MEMORY READ : MEM[00fffff4] = 0000096f
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000096F, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000096f
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000046
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000046, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000046
PIPE :: execute_instruction : operands (0000096F, 00000046)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000009B5PIPE :: execute_instruction : operands (00FFFFE8, 000009B5)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000009B5, Reg2 = 00000046
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000009B5, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000009b5
PIPE :: execute_instruction : operands (00FFFFE8, 000009B5)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000009B5
MEMORY WRITE : MEM[00fffff4] = 000009b5
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000009B5
MEMORY READ : MEM[00fffff0] = 00000046
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000046, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000046
PIPE :: execute_instruction : operands (00000046, 00000046)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000047PIPE :: execute_instruction : operands (00FFFFE8, 00000047)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000047, Reg2 = 00000046
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000047, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000047
PIPE :: execute_instruction : operands (00FFFFE8, 00000047)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000047
MEMORY WRITE : MEM[00fffff0] = 00000047
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000047
MEMORY READ : MEM[00fffff0] = 00000047
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000047, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000047
PIPE :: execute_instruction : operands (00000047, 00000047)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000047
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000096F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000096F
MEMORY READ : MEM[00fffff4] = 000009b5
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000009B5, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000009b5
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000047
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000047, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000047
PIPE :: execute_instruction : operands (000009B5, 00000047)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000009FCPIPE :: execute_instruction : operands (00FFFFE8, 000009FC)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000009FC, Reg2 = 00000047
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000009FC, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000009fc
PIPE :: execute_instruction : operands (00FFFFE8, 000009FC)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000009FC
MEMORY WRITE : MEM[00fffff4] = 000009fc
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000009FC
MEMORY READ : MEM[00fffff0] = 00000047
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000047, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000047
PIPE :: execute_instruction : operands (00000047, 00000047)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000048PIPE :: execute_instruction : operands (00FFFFE8, 00000048)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000048, Reg2 = 00000047
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000048, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000048
PIPE :: execute_instruction : operands (00FFFFE8, 00000048)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000048
MEMORY WRITE : MEM[00fffff0] = 00000048
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000048
MEMORY READ : MEM[00fffff0] = 00000048
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000048, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000048
PIPE :: execute_instruction : operands (00000048, 00000048)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000048
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000009B5)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000009B5
MEMORY READ : MEM[00fffff4] = 000009fc
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000009FC, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000009fc
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000048
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000048, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000048
PIPE :: execute_instruction : operands (000009FC, 00000048)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000A44PIPE :: execute_instruction : operands (00FFFFE8, 00000A44)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000A44, Reg2 = 00000048
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000A44, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000a44
PIPE :: execute_instruction : operands (00FFFFE8, 00000A44)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000A44
MEMORY WRITE : MEM[00fffff4] = 00000a44
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000A44
MEMORY READ : MEM[00fffff0] = 00000048
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000048, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000048
PIPE :: execute_instruction : operands (00000048, 00000048)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000049PIPE :: execute_instruction : operands (00FFFFE8, 00000049)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000049, Reg2 = 00000048
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000049, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000049
PIPE :: execute_instruction : operands (00FFFFE8, 00000049)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000049
MEMORY WRITE : MEM[00fffff0] = 00000049
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000049
MEMORY READ : MEM[00fffff0] = 00000049
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000049, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000049
PIPE :: execute_instruction : operands (00000049, 00000049)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000049
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000009FC)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000009FC
MEMORY READ : MEM[00fffff4] = 00000a44
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000A44, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000a44
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000049
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000049, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000049
PIPE :: execute_instruction : operands (00000A44, 00000049)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000A8DPIPE :: execute_instruction : operands (00FFFFE8, 00000A8D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000A8D, Reg2 = 00000049
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000A8D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000a8d
PIPE :: execute_instruction : operands (00FFFFE8, 00000A8D)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000A8D
MEMORY WRITE : MEM[00fffff4] = 00000a8d
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000A8D
MEMORY READ : MEM[00fffff0] = 00000049
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000049, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000049
PIPE :: execute_instruction : operands (00000049, 00000049)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000004APIPE :: execute_instruction : operands (00FFFFE8, 0000004A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000004A, Reg2 = 00000049
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000004A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004a
PIPE :: execute_instruction : operands (00FFFFE8, 0000004A)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004A
MEMORY WRITE : MEM[00fffff0] = 0000004a
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004A
MEMORY READ : MEM[00fffff0] = 0000004a
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000004A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004a
PIPE :: execute_instruction : operands (0000004A, 0000004A)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000004A
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000A44)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000A44
MEMORY READ : MEM[00fffff4] = 00000a8d
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000A8D, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000a8d
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000004a
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000004A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004a
PIPE :: execute_instruction : operands (00000A8D, 0000004A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000AD7PIPE :: execute_instruction : operands (00FFFFE8, 00000AD7)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000AD7, Reg2 = 0000004A
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000AD7, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000ad7
PIPE :: execute_instruction : operands (00FFFFE8, 00000AD7)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000AD7
MEMORY WRITE : MEM[00fffff4] = 00000ad7
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000AD7
MEMORY READ : MEM[00fffff0] = 0000004a
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000004A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004a
PIPE :: execute_instruction : operands (0000004A, 0000004A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000004BPIPE :: execute_instruction : operands (00FFFFE8, 0000004B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000004B, Reg2 = 0000004A
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000004B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004b
PIPE :: execute_instruction : operands (00FFFFE8, 0000004B)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004B
MEMORY WRITE : MEM[00fffff0] = 0000004b
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004B
MEMORY READ : MEM[00fffff0] = 0000004b
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000004B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004b
PIPE :: execute_instruction : operands (0000004B, 0000004B)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000004B
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000A8D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000A8D
MEMORY READ : MEM[00fffff4] = 00000ad7
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000AD7, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000ad7
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000004b
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000004B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004b
PIPE :: execute_instruction : operands (00000AD7, 0000004B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000B22PIPE :: execute_instruction : operands (00FFFFE8, 00000B22)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000B22, Reg2 = 0000004B
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000B22, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000b22
PIPE :: execute_instruction : operands (00FFFFE8, 00000B22)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000B22
MEMORY WRITE : MEM[00fffff4] = 00000b22
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000B22
MEMORY READ : MEM[00fffff0] = 0000004b
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000004B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004b
PIPE :: execute_instruction : operands (0000004B, 0000004B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000004CPIPE :: execute_instruction : operands (00FFFFE8, 0000004C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000004C, Reg2 = 0000004B
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000004C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004c
PIPE :: execute_instruction : operands (00FFFFE8, 0000004C)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004C
MEMORY WRITE : MEM[00fffff0] = 0000004c
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004C
MEMORY READ : MEM[00fffff0] = 0000004c
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000004C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004c
PIPE :: execute_instruction : operands (0000004C, 0000004C)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000004C
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000AD7)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000AD7
MEMORY READ : MEM[00fffff4] = 00000b22
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000B22, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000b22
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000004c
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000004C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004c
PIPE :: execute_instruction : operands (00000B22, 0000004C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000B6EPIPE :: execute_instruction : operands (00FFFFE8, 00000B6E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000B6E, Reg2 = 0000004C
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000B6E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000b6e
PIPE :: execute_instruction : operands (00FFFFE8, 00000B6E)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000B6E
MEMORY WRITE : MEM[00fffff4] = 00000b6e
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000B6E
MEMORY READ : MEM[00fffff0] = 0000004c
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000004C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004c
PIPE :: execute_instruction : operands (0000004C, 0000004C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000004DPIPE :: execute_instruction : operands (00FFFFE8, 0000004D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000004D, Reg2 = 0000004C
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000004D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004d
PIPE :: execute_instruction : operands (00FFFFE8, 0000004D)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004D
MEMORY WRITE : MEM[00fffff0] = 0000004d
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004D
MEMORY READ : MEM[00fffff0] = 0000004d
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000004D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004d
PIPE :: execute_instruction : operands (0000004D, 0000004D)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000004D
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000B22)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000B22
MEMORY READ : MEM[00fffff4] = 00000b6e
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000B6E, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000b6e
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000004d
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000004D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004d
PIPE :: execute_instruction : operands (00000B6E, 0000004D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000BBBPIPE :: execute_instruction : operands (00FFFFE8, 00000BBB)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000BBB, Reg2 = 0000004D
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000BBB, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000bbb
PIPE :: execute_instruction : operands (00FFFFE8, 00000BBB)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000BBB
MEMORY WRITE : MEM[00fffff4] = 00000bbb
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000BBB
MEMORY READ : MEM[00fffff0] = 0000004d
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000004D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004d
PIPE :: execute_instruction : operands (0000004D, 0000004D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000004EPIPE :: execute_instruction : operands (00FFFFE8, 0000004E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000004E, Reg2 = 0000004D
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000004E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004e
PIPE :: execute_instruction : operands (00FFFFE8, 0000004E)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004E
MEMORY WRITE : MEM[00fffff0] = 0000004e
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004E
MEMORY READ : MEM[00fffff0] = 0000004e
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000004E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004e
PIPE :: execute_instruction : operands (0000004E, 0000004E)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000004E
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000B6E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000B6E
MEMORY READ : MEM[00fffff4] = 00000bbb
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000BBB, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000bbb
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000004e
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000004E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004e
PIPE :: execute_instruction : operands (00000BBB, 0000004E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000C09PIPE :: execute_instruction : operands (00FFFFE8, 00000C09)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000C09, Reg2 = 0000004E
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000C09, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000c09
PIPE :: execute_instruction : operands (00FFFFE8, 00000C09)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000C09
MEMORY WRITE : MEM[00fffff4] = 00000c09
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000C09
MEMORY READ : MEM[00fffff0] = 0000004e
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000004E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004e
PIPE :: execute_instruction : operands (0000004E, 0000004E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000004FPIPE :: execute_instruction : operands (00FFFFE8, 0000004F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000004F, Reg2 = 0000004E
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000004F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004f
PIPE :: execute_instruction : operands (00FFFFE8, 0000004F)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004F
MEMORY WRITE : MEM[00fffff0] = 0000004f
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000004F
MEMORY READ : MEM[00fffff0] = 0000004f
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000004F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004f
PIPE :: execute_instruction : operands (0000004F, 0000004F)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000004F
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000BBB)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000BBB
MEMORY READ : MEM[00fffff4] = 00000c09
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000C09, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000c09
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000004f
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000004F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004f
PIPE :: execute_instruction : operands (00000C09, 0000004F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000C58PIPE :: execute_instruction : operands (00FFFFE8, 00000C58)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000C58, Reg2 = 0000004F
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000C58, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000c58
PIPE :: execute_instruction : operands (00FFFFE8, 00000C58)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000C58
MEMORY WRITE : MEM[00fffff4] = 00000c58
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000C58
MEMORY READ : MEM[00fffff0] = 0000004f
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000004F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000004f
PIPE :: execute_instruction : operands (0000004F, 0000004F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000050PIPE :: execute_instruction : operands (00FFFFE8, 00000050)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000050, Reg2 = 0000004F
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000050, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000050
PIPE :: execute_instruction : operands (00FFFFE8, 00000050)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000050
MEMORY WRITE : MEM[00fffff0] = 00000050
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000050
MEMORY READ : MEM[00fffff0] = 00000050
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000050, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000050
PIPE :: execute_instruction : operands (00000050, 00000050)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000050
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000C09)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000C09
MEMORY READ : MEM[00fffff4] = 00000c58
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000C58, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000c58
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000050
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000050, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000050
PIPE :: execute_instruction : operands (00000C58, 00000050)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000CA8PIPE :: execute_instruction : operands (00FFFFE8, 00000CA8)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000CA8, Reg2 = 00000050
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000CA8, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000ca8
PIPE :: execute_instruction : operands (00FFFFE8, 00000CA8)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000CA8
MEMORY WRITE : MEM[00fffff4] = 00000ca8
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000CA8
MEMORY READ : MEM[00fffff0] = 00000050
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000050, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000050
PIPE :: execute_instruction : operands (00000050, 00000050)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000051PIPE :: execute_instruction : operands (00FFFFE8, 00000051)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000051, Reg2 = 00000050
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000051, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000051
PIPE :: execute_instruction : operands (00FFFFE8, 00000051)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000051
MEMORY WRITE : MEM[00fffff0] = 00000051
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000051
MEMORY READ : MEM[00fffff0] = 00000051
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000051, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000051
PIPE :: execute_instruction : operands (00000051, 00000051)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000051
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000C58)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000C58
MEMORY READ : MEM[00fffff4] = 00000ca8
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000CA8, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000ca8
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000051
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000051, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000051
PIPE :: execute_instruction : operands (00000CA8, 00000051)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000CF9PIPE :: execute_instruction : operands (00FFFFE8, 00000CF9)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000CF9, Reg2 = 00000051
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000CF9, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000cf9
PIPE :: execute_instruction : operands (00FFFFE8, 00000CF9)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000CF9
MEMORY WRITE : MEM[00fffff4] = 00000cf9
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000CF9
MEMORY READ : MEM[00fffff0] = 00000051
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000051, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000051
PIPE :: execute_instruction : operands (00000051, 00000051)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000052PIPE :: execute_instruction : operands (00FFFFE8, 00000052)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000052, Reg2 = 00000051
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000052, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000052
PIPE :: execute_instruction : operands (00FFFFE8, 00000052)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000052
MEMORY WRITE : MEM[00fffff0] = 00000052
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000052
MEMORY READ : MEM[00fffff0] = 00000052
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000052, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000052
PIPE :: execute_instruction : operands (00000052, 00000052)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000052
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000CA8)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000CA8
MEMORY READ : MEM[00fffff4] = 00000cf9
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000CF9, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000cf9
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000052
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000052, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000052
PIPE :: execute_instruction : operands (00000CF9, 00000052)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000D4BPIPE :: execute_instruction : operands (00FFFFE8, 00000D4B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000D4B, Reg2 = 00000052
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000D4B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000d4b
PIPE :: execute_instruction : operands (00FFFFE8, 00000D4B)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000D4B
MEMORY WRITE : MEM[00fffff4] = 00000d4b
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000D4B
MEMORY READ : MEM[00fffff0] = 00000052
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000052, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000052
PIPE :: execute_instruction : operands (00000052, 00000052)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000053PIPE :: execute_instruction : operands (00FFFFE8, 00000053)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000053, Reg2 = 00000052
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000053, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000053
PIPE :: execute_instruction : operands (00FFFFE8, 00000053)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000053
MEMORY WRITE : MEM[00fffff0] = 00000053
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000053
MEMORY READ : MEM[00fffff0] = 00000053
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000053, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000053
PIPE :: execute_instruction : operands (00000053, 00000053)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000053
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000CF9)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000CF9
MEMORY READ : MEM[00fffff4] = 00000d4b
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000D4B, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000d4b
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000053
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000053, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000053
PIPE :: execute_instruction : operands (00000D4B, 00000053)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000D9EPIPE :: execute_instruction : operands (00FFFFE8, 00000D9E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000D9E, Reg2 = 00000053
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000D9E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000d9e
PIPE :: execute_instruction : operands (00FFFFE8, 00000D9E)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000D9E
MEMORY WRITE : MEM[00fffff4] = 00000d9e
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000D9E
MEMORY READ : MEM[00fffff0] = 00000053
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000053, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000053
PIPE :: execute_instruction : operands (00000053, 00000053)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000054PIPE :: execute_instruction : operands (00FFFFE8, 00000054)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000054, Reg2 = 00000053
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000054, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000054
PIPE :: execute_instruction : operands (00FFFFE8, 00000054)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000054
MEMORY WRITE : MEM[00fffff0] = 00000054
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000054
MEMORY READ : MEM[00fffff0] = 00000054
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000054, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000054
PIPE :: execute_instruction : operands (00000054, 00000054)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000054
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000D4B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000D4B
MEMORY READ : MEM[00fffff4] = 00000d9e
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000D9E, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000d9e
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000054
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000054, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000054
PIPE :: execute_instruction : operands (00000D9E, 00000054)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000DF2PIPE :: execute_instruction : operands (00FFFFE8, 00000DF2)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000DF2, Reg2 = 00000054
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000DF2, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000df2
PIPE :: execute_instruction : operands (00FFFFE8, 00000DF2)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000DF2
MEMORY WRITE : MEM[00fffff4] = 00000df2
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000DF2
MEMORY READ : MEM[00fffff0] = 00000054
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000054, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000054
PIPE :: execute_instruction : operands (00000054, 00000054)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000055PIPE :: execute_instruction : operands (00FFFFE8, 00000055)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000055, Reg2 = 00000054
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000055, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000055
PIPE :: execute_instruction : operands (00FFFFE8, 00000055)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000055
MEMORY WRITE : MEM[00fffff0] = 00000055
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000055
MEMORY READ : MEM[00fffff0] = 00000055
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000055, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000055
PIPE :: execute_instruction : operands (00000055, 00000055)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000055
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000D9E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000D9E
MEMORY READ : MEM[00fffff4] = 00000df2
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000DF2, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000df2
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000055
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000055, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000055
PIPE :: execute_instruction : operands (00000DF2, 00000055)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000E47PIPE :: execute_instruction : operands (00FFFFE8, 00000E47)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000E47, Reg2 = 00000055
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000E47, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000e47
PIPE :: execute_instruction : operands (00FFFFE8, 00000E47)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000E47
MEMORY WRITE : MEM[00fffff4] = 00000e47
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000E47
MEMORY READ : MEM[00fffff0] = 00000055
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000055, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000055
PIPE :: execute_instruction : operands (00000055, 00000055)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000056PIPE :: execute_instruction : operands (00FFFFE8, 00000056)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000056, Reg2 = 00000055
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000056, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000056
PIPE :: execute_instruction : operands (00FFFFE8, 00000056)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000056
MEMORY WRITE : MEM[00fffff0] = 00000056
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000056
MEMORY READ : MEM[00fffff0] = 00000056
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000056, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000056
PIPE :: execute_instruction : operands (00000056, 00000056)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000056
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000DF2)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000DF2
MEMORY READ : MEM[00fffff4] = 00000e47
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000E47, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000e47
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000056
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000056, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000056
PIPE :: execute_instruction : operands (00000E47, 00000056)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000E9DPIPE :: execute_instruction : operands (00FFFFE8, 00000E9D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000E9D, Reg2 = 00000056
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000E9D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000e9d
PIPE :: execute_instruction : operands (00FFFFE8, 00000E9D)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000E9D
MEMORY WRITE : MEM[00fffff4] = 00000e9d
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000E9D
MEMORY READ : MEM[00fffff0] = 00000056
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000056, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000056
PIPE :: execute_instruction : operands (00000056, 00000056)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000057PIPE :: execute_instruction : operands (00FFFFE8, 00000057)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000057, Reg2 = 00000056
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000057, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000057
PIPE :: execute_instruction : operands (00FFFFE8, 00000057)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000057
MEMORY WRITE : MEM[00fffff0] = 00000057
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000057
MEMORY READ : MEM[00fffff0] = 00000057
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000057, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000057
PIPE :: execute_instruction : operands (00000057, 00000057)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000057
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000E47)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000E47
MEMORY READ : MEM[00fffff4] = 00000e9d
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000E9D, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000e9d
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000057
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000057, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000057
PIPE :: execute_instruction : operands (00000E9D, 00000057)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000EF4PIPE :: execute_instruction : operands (00FFFFE8, 00000EF4)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000EF4, Reg2 = 00000057
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000EF4, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000ef4
PIPE :: execute_instruction : operands (00FFFFE8, 00000EF4)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000EF4
MEMORY WRITE : MEM[00fffff4] = 00000ef4
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000EF4
MEMORY READ : MEM[00fffff0] = 00000057
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000057, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000057
PIPE :: execute_instruction : operands (00000057, 00000057)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000058PIPE :: execute_instruction : operands (00FFFFE8, 00000058)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000058, Reg2 = 00000057
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000058, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000058
PIPE :: execute_instruction : operands (00FFFFE8, 00000058)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000058
MEMORY WRITE : MEM[00fffff0] = 00000058
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000058
MEMORY READ : MEM[00fffff0] = 00000058
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000058, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000058
PIPE :: execute_instruction : operands (00000058, 00000058)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000058
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000E9D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000E9D
MEMORY READ : MEM[00fffff4] = 00000ef4
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000EF4, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000ef4
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000058
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000058, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000058
PIPE :: execute_instruction : operands (00000EF4, 00000058)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000F4CPIPE :: execute_instruction : operands (00FFFFE8, 00000F4C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000F4C, Reg2 = 00000058
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000F4C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000f4c
PIPE :: execute_instruction : operands (00FFFFE8, 00000F4C)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000F4C
MEMORY WRITE : MEM[00fffff4] = 00000f4c
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000F4C
MEMORY READ : MEM[00fffff0] = 00000058
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000058, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000058
PIPE :: execute_instruction : operands (00000058, 00000058)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000059PIPE :: execute_instruction : operands (00FFFFE8, 00000059)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000059, Reg2 = 00000058
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000059, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000059
PIPE :: execute_instruction : operands (00FFFFE8, 00000059)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000059
MEMORY WRITE : MEM[00fffff0] = 00000059
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000059
MEMORY READ : MEM[00fffff0] = 00000059
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000059, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000059
PIPE :: execute_instruction : operands (00000059, 00000059)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000059
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000EF4)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000EF4
MEMORY READ : MEM[00fffff4] = 00000f4c
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000F4C, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000f4c
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000059
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000059, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000059
PIPE :: execute_instruction : operands (00000F4C, 00000059)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000FA5PIPE :: execute_instruction : operands (00FFFFE8, 00000FA5)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000FA5, Reg2 = 00000059
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000FA5, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000fa5
PIPE :: execute_instruction : operands (00FFFFE8, 00000FA5)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000FA5
MEMORY WRITE : MEM[00fffff4] = 00000fa5
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000FA5
MEMORY READ : MEM[00fffff0] = 00000059
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000059, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000059
PIPE :: execute_instruction : operands (00000059, 00000059)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000005APIPE :: execute_instruction : operands (00FFFFE8, 0000005A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000005A, Reg2 = 00000059
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000005A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005a
PIPE :: execute_instruction : operands (00FFFFE8, 0000005A)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005A
MEMORY WRITE : MEM[00fffff0] = 0000005a
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005A
MEMORY READ : MEM[00fffff0] = 0000005a
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000005A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005a
PIPE :: execute_instruction : operands (0000005A, 0000005A)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000005A
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000F4C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000F4C
MEMORY READ : MEM[00fffff4] = 00000fa5
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000FA5, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000fa5
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000005a
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000005A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005a
PIPE :: execute_instruction : operands (00000FA5, 0000005A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000FFFPIPE :: execute_instruction : operands (00FFFFE8, 00000FFF)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00000FFF, Reg2 = 0000005A
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00000FFF, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000fff
PIPE :: execute_instruction : operands (00FFFFE8, 00000FFF)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000FFF
MEMORY WRITE : MEM[00fffff4] = 00000fff
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000FFF
MEMORY READ : MEM[00fffff0] = 0000005a
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000005A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005a
PIPE :: execute_instruction : operands (0000005A, 0000005A)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000005BPIPE :: execute_instruction : operands (00FFFFE8, 0000005B)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000005B, Reg2 = 0000005A
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000005B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005b
PIPE :: execute_instruction : operands (00FFFFE8, 0000005B)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005B
MEMORY WRITE : MEM[00fffff0] = 0000005b
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005B
MEMORY READ : MEM[00fffff0] = 0000005b
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000005B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005b
PIPE :: execute_instruction : operands (0000005B, 0000005B)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000005B
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000FA5)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000FA5
MEMORY READ : MEM[00fffff4] = 00000fff
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00000FFF, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00000fff
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000005b
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000005B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005b
PIPE :: execute_instruction : operands (00000FFF, 0000005B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000105APIPE :: execute_instruction : operands (00FFFFE8, 0000105A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 0000105A, Reg2 = 0000005B
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 0000105A, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000105a
PIPE :: execute_instruction : operands (00FFFFE8, 0000105A)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 0000105A
MEMORY WRITE : MEM[00fffff4] = 0000105a
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000105A
MEMORY READ : MEM[00fffff0] = 0000005b
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000005B, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005b
PIPE :: execute_instruction : operands (0000005B, 0000005B)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000005CPIPE :: execute_instruction : operands (00FFFFE8, 0000005C)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000005C, Reg2 = 0000005B
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000005C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005c
PIPE :: execute_instruction : operands (00FFFFE8, 0000005C)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005C
MEMORY WRITE : MEM[00fffff0] = 0000005c
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005C
MEMORY READ : MEM[00fffff0] = 0000005c
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000005C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005c
PIPE :: execute_instruction : operands (0000005C, 0000005C)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000005C
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00000FFF)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00000FFF
MEMORY READ : MEM[00fffff4] = 0000105a
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 0000105A, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 0000105a
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000005c
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000005C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005c
PIPE :: execute_instruction : operands (0000105A, 0000005C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000010B6PIPE :: execute_instruction : operands (00FFFFE8, 000010B6)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000010B6, Reg2 = 0000005C
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000010B6, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000010b6
PIPE :: execute_instruction : operands (00FFFFE8, 000010B6)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000010B6
MEMORY WRITE : MEM[00fffff4] = 000010b6
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000010B6
MEMORY READ : MEM[00fffff0] = 0000005c
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000005C, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005c
PIPE :: execute_instruction : operands (0000005C, 0000005C)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000005DPIPE :: execute_instruction : operands (00FFFFE8, 0000005D)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000005D, Reg2 = 0000005C
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000005D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005d
PIPE :: execute_instruction : operands (00FFFFE8, 0000005D)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005D
MEMORY WRITE : MEM[00fffff0] = 0000005d
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005D
MEMORY READ : MEM[00fffff0] = 0000005d
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000005D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005d
PIPE :: execute_instruction : operands (0000005D, 0000005D)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000005D
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 0000105A)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 0000105A
MEMORY READ : MEM[00fffff4] = 000010b6
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000010B6, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000010b6
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000005d
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000005D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005d
PIPE :: execute_instruction : operands (000010B6, 0000005D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00001113PIPE :: execute_instruction : operands (00FFFFE8, 00001113)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00001113, Reg2 = 0000005D
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00001113, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00001113
PIPE :: execute_instruction : operands (00FFFFE8, 00001113)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00001113
MEMORY WRITE : MEM[00fffff4] = 00001113
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00001113
MEMORY READ : MEM[00fffff0] = 0000005d
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000005D, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005d
PIPE :: execute_instruction : operands (0000005D, 0000005D)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000005EPIPE :: execute_instruction : operands (00FFFFE8, 0000005E)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000005E, Reg2 = 0000005D
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000005E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005e
PIPE :: execute_instruction : operands (00FFFFE8, 0000005E)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005E
MEMORY WRITE : MEM[00fffff0] = 0000005e
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005E
MEMORY READ : MEM[00fffff0] = 0000005e
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000005E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005e
PIPE :: execute_instruction : operands (0000005E, 0000005E)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000005E
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000010B6)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000010B6
MEMORY READ : MEM[00fffff4] = 00001113
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00001113, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00001113
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000005e
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000005E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005e
PIPE :: execute_instruction : operands (00001113, 0000005E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00001171PIPE :: execute_instruction : operands (00FFFFE8, 00001171)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00001171, Reg2 = 0000005E
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00001171, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00001171
PIPE :: execute_instruction : operands (00FFFFE8, 00001171)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00001171
MEMORY WRITE : MEM[00fffff4] = 00001171
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00001171
MEMORY READ : MEM[00fffff0] = 0000005e
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000005E, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005e
PIPE :: execute_instruction : operands (0000005E, 0000005E)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 0000005FPIPE :: execute_instruction : operands (00FFFFE8, 0000005F)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 0000005F, Reg2 = 0000005E
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 0000005F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005f
PIPE :: execute_instruction : operands (00FFFFE8, 0000005F)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005F
MEMORY WRITE : MEM[00fffff0] = 0000005f
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 0000005F
MEMORY READ : MEM[00fffff0] = 0000005f
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 0000005F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005f
PIPE :: execute_instruction : operands (0000005F, 0000005F)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 0000005F
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00001113)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00001113
MEMORY READ : MEM[00fffff4] = 00001171
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00001171, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00001171
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 0000005f
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 0000005F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005f
PIPE :: execute_instruction : operands (00001171, 0000005F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000011D0PIPE :: execute_instruction : operands (00FFFFE8, 000011D0)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000011D0, Reg2 = 0000005F
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000011D0, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000011d0
PIPE :: execute_instruction : operands (00FFFFE8, 000011D0)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000011D0
MEMORY WRITE : MEM[00fffff4] = 000011d0
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000011D0
MEMORY READ : MEM[00fffff0] = 0000005f
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 0000005F, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 0000005f
PIPE :: execute_instruction : operands (0000005F, 0000005F)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000060PIPE :: execute_instruction : operands (00FFFFE8, 00000060)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000060, Reg2 = 0000005F
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000060, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000060
PIPE :: execute_instruction : operands (00FFFFE8, 00000060)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000060
MEMORY WRITE : MEM[00fffff0] = 00000060
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000060
MEMORY READ : MEM[00fffff0] = 00000060
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000060, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000060
PIPE :: execute_instruction : operands (00000060, 00000060)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000060
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00001171)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00001171
MEMORY READ : MEM[00fffff4] = 000011d0
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000011D0, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000011d0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000060
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000060, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000060
PIPE :: execute_instruction : operands (000011D0, 00000060)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00001230PIPE :: execute_instruction : operands (00FFFFE8, 00001230)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00001230, Reg2 = 00000060
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00001230, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00001230
PIPE :: execute_instruction : operands (00FFFFE8, 00001230)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00001230
MEMORY WRITE : MEM[00fffff4] = 00001230
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00001230
MEMORY READ : MEM[00fffff0] = 00000060
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000060, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000060
PIPE :: execute_instruction : operands (00000060, 00000060)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000061PIPE :: execute_instruction : operands (00FFFFE8, 00000061)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000061, Reg2 = 00000060
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000061, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000061
PIPE :: execute_instruction : operands (00FFFFE8, 00000061)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000061
MEMORY WRITE : MEM[00fffff0] = 00000061
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000061
MEMORY READ : MEM[00fffff0] = 00000061
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000061, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000061
PIPE :: execute_instruction : operands (00000061, 00000061)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000061
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000011D0)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000011D0
MEMORY READ : MEM[00fffff4] = 00001230
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00001230, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00001230
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000061
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000061, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000061
PIPE :: execute_instruction : operands (00001230, 00000061)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00001291PIPE :: execute_instruction : operands (00FFFFE8, 00001291)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00001291, Reg2 = 00000061
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00001291, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00001291
PIPE :: execute_instruction : operands (00FFFFE8, 00001291)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00001291
MEMORY WRITE : MEM[00fffff4] = 00001291
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00001291
MEMORY READ : MEM[00fffff0] = 00000061
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000061, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000061
PIPE :: execute_instruction : operands (00000061, 00000061)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000062PIPE :: execute_instruction : operands (00FFFFE8, 00000062)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000062, Reg2 = 00000061
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000062, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000062
PIPE :: execute_instruction : operands (00FFFFE8, 00000062)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000062
MEMORY WRITE : MEM[00fffff0] = 00000062
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000062
MEMORY READ : MEM[00fffff0] = 00000062
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000062, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000062
PIPE :: execute_instruction : operands (00000062, 00000062)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000062
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00001230)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00001230
MEMORY READ : MEM[00fffff4] = 00001291
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00001291, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00001291
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000062
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000062, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000062
PIPE :: execute_instruction : operands (00001291, 00000062)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000012F3PIPE :: execute_instruction : operands (00FFFFE8, 000012F3)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000012F3, Reg2 = 00000062
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000012F3, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000012f3
PIPE :: execute_instruction : operands (00FFFFE8, 000012F3)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000012F3
MEMORY WRITE : MEM[00fffff4] = 000012f3
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000012F3
MEMORY READ : MEM[00fffff0] = 00000062
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000062, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000062
PIPE :: execute_instruction : operands (00000062, 00000062)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000063PIPE :: execute_instruction : operands (00FFFFE8, 00000063)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000063, Reg2 = 00000062
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000063, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000063
PIPE :: execute_instruction : operands (00FFFFE8, 00000063)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000063
MEMORY WRITE : MEM[00fffff0] = 00000063
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000063
MEMORY READ : MEM[00fffff0] = 00000063
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000063, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000063
PIPE :: execute_instruction : operands (00000063, 00000063)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000063
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 00001291)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00001291
MEMORY READ : MEM[00fffff4] = 000012f3
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 000012F3, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000012f3
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000063
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000063, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000063
PIPE :: execute_instruction : operands (000012F3, 00000063)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00001356PIPE :: execute_instruction : operands (00FFFFE8, 00001356)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 00001356, Reg2 = 00000063
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 00001356, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00001356
PIPE :: execute_instruction : operands (00FFFFE8, 00001356)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00001356
MEMORY WRITE : MEM[00fffff4] = 00001356
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00001356
MEMORY READ : MEM[00fffff0] = 00000063
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000063, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000063
PIPE :: execute_instruction : operands (00000063, 00000063)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000064PIPE :: execute_instruction : operands (00FFFFE8, 00000064)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000064, Reg2 = 00000063
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000064, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000064
PIPE :: execute_instruction : operands (00FFFFE8, 00000064)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000064
MEMORY WRITE : MEM[00fffff0] = 00000064
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000064
MEMORY READ : MEM[00fffff0] = 00000064
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000064, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000064
PIPE :: execute_instruction : operands (00000064, 00000064)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000001PIPE :: execute_instruction : operands (00000001, 00000000)
Break Point
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000001, Reg2 = 00000064
================current pipeline status=================
IF  res : PC = 00000024
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000028
PIPE :: write back : data = 00000001, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000001
PIPE :: execute_instruction : operands (00FFFFE8, 000012F3)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 1440fff3 :: memory access : Address = 00000001, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000028
ID  res : PC = 00000024
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000002C
PIPE :: write back : data = 00000001, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000001)
PIPE :: Fetched instruction : 00621021
PIPE :: decode_instruction : 00000000
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 000012F3
MEMORY READ : MEM[00fffff4] = 00001356
================current pipeline status=================
IF  res : PC = 0000002C
ID  res : PC = 00000028
EX  res : PC = 00000024
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000030
PIPE :: write back : data = 00001356, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 00001356
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC2000C
PIPE :: decode_instruction : 00621021
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000001
MEMORY READ : MEM[00fffff0] = 00000064
================current pipeline status=================
IF  res : PC = 00000030
ID  res : PC = 0000002C
EX  res : PC = 00000028
MEM res : PC = 00000024
WB  res : PC = 00000020
PC : 00000034
PIPE :: write back : data = 00000064, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000064
PIPE :: execute_instruction : operands (00001356, 00000064)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc2000c
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000034
ID  res : PC = 00000030
EX  res : PC = 0000002C
MEM res : PC = 00000028
WB  res : PC = 00000024
PC : 00000038
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 000013BAPIPE :: execute_instruction : operands (00FFFFE8, 000013BA)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 00621021 :: memory access : Address = 000013BA, Reg2 = 00000064
================current pipeline status=================
IF  res : PC = 00000038
ID  res : PC = 00000034
EX  res : PC = 00000030
MEM res : PC = 0000002C
WB  res : PC = 00000028
PC : 0000003C
PIPE :: write back : data = 000013BA, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000013ba
PIPE :: execute_instruction : operands (00FFFFE8, 000013BA)
PIPE :: Fetched instruction : 24420001
PIPE :: decode_instruction : 00000000
PIPE :: afc2000c :: memory access : Address = 00FFFFF4, Reg2 = 000013BA
MEMORY WRITE : MEM[00fffff4] = 000013ba
================current pipeline status=================
IF  res : PC = 0000003C
ID  res : PC = 00000038
EX  res : PC = 00000034
MEM res : PC = 00000030
WB  res : PC = 0000002C
PC : 00000040
PIPE :: write back : data = 00FFFFF4, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : AFC20008
PIPE :: decode_instruction : 24420001
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 000013BA
MEMORY READ : MEM[00fffff0] = 00000064
================current pipeline status=================
IF  res : PC = 00000040
ID  res : PC = 0000003C
EX  res : PC = 00000038
MEM res : PC = 00000034
WB  res : PC = 00000030
PC : 00000044
PIPE :: write back : data = 00000064, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000064
PIPE :: execute_instruction : operands (00000064, 00000064)
PIPE :: Fetched instruction : 8FC20008
PIPE :: decode_instruction : afc20008
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000044
ID  res : PC = 00000040
EX  res : PC = 0000003C
MEM res : PC = 00000038
WB  res : PC = 00000034
PC : 00000048
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rt forward trigger 00000065PIPE :: execute_instruction : operands (00FFFFE8, 00000065)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc20008
PIPE :: 24420001 :: memory access : Address = 00000065, Reg2 = 00000064
================current pipeline status=================
IF  res : PC = 00000048
ID  res : PC = 00000044
EX  res : PC = 00000040
MEM res : PC = 0000003C
WB  res : PC = 00000038
PC : 0000004C
PIPE :: write back : data = 00000065, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000065
PIPE :: execute_instruction : operands (00FFFFE8, 00000065)
PIPE :: Fetched instruction : 28420065
PIPE :: decode_instruction : 00000000
PIPE :: afc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000065
MEMORY WRITE : MEM[00fffff0] = 00000065
================current pipeline status=================
IF  res : PC = 0000004C
ID  res : PC = 00000048
EX  res : PC = 00000044
MEM res : PC = 00000040
WB  res : PC = 0000003C
PC : 00000050
PIPE :: write back : data = 00FFFFF0, reg_idx = 00000002, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
Break Point
PIPE :: Branch Prediction :: prediction triggered :: target addr 00000020
PIPE :: Fetched instruction : 1440FFF3
PIPE :: decode_instruction : 28420065
PIPE :: 8fc20008 :: memory access : Address = 00FFFFF0, Reg2 = 00000065
MEMORY READ : MEM[00fffff0] = 00000065
================current pipeline status=================
IF  res : PC = 00000050
ID  res : PC = 0000004C
EX  res : PC = 00000048
MEM res : PC = 00000044
WB  res : PC = 00000040
PC : 00000020
PIPE :: write back : data = 00000065, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000065
PIPE :: execute_instruction : operands (00000065, 00000065)
PIPE :: Fetched instruction : 8FC3000C
PIPE :: decode_instruction : 1440fff3
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000020
ID  res : PC = 00000050
EX  res : PC = 0000004C
MEM res : PC = 00000048
WB  res : PC = 00000044
PC : 00000024
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : rs forward trigger 00000000PIPE :: execute_instruction : operands (00000000, 00000000)
Break Point
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 8fc3000c
PIPE :: 28420065 :: memory access : Address = 00000000, Reg2 = 00000065
================current pipeline status=================
IF  res : PC = 00000054
ID  res : PC = 00000020
EX  res : PC = 00000050
MEM res : PC = 0000004C
WB  res : PC = 00000048
PC : 00000058
PIPE :: write back : data = 00000000, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 00000000
PIPE :: execute_instruction : operands (00FFFFE8, 00001356)
PIPE :: Fetched instruction : 8FC2000C
PIPE :: decode_instruction : 00000000
PIPE :: 1440fff3 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000058
ID  res : PC = 00000054
EX  res : PC = 00000020
MEM res : PC = 00000050
WB  res : PC = 0000004C
PC : 0000005C
PIPE :: write back : data = 00000000, reg_idx = 0000001F, reg_write = 0, isUpperAccess = 0
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetched instruction : 03C0E821
PIPE :: decode_instruction : 8fc2000c
PIPE :: 8fc3000c :: memory access : Address = 00FFFFF4, Reg2 = 00001356
MEMORY READ : MEM[00fffff4] = 000013ba
================current pipeline status=================
IF  res : PC = 0000005C
ID  res : PC = 00000058
EX  res : PC = 00000054
MEM res : PC = 00000020
WB  res : PC = 00000050
PC : 00000060
PIPE :: write back : data = 000013BA, reg_idx = 00000003, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[3] = 000013ba
PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : 8FBE0014
PIPE :: decode_instruction : 03c0e821
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000060
ID  res : PC = 0000005C
EX  res : PC = 00000058
MEM res : PC = 00000054
WB  res : PC = 00000020
PC : 00000064
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: execute_instruction : operands (00FFFFE8, 00000000)
PIPE :: Fetched instruction : 27BD0018
PIPE :: decode_instruction : 8fbe0014
PIPE :: 8fc2000c :: memory access : Address = 00FFFFF4, Reg2 = 00000000
MEMORY READ : MEM[00fffff4] = 000013ba
================current pipeline status=================
IF  res : PC = 00000064
ID  res : PC = 00000060
EX  res : PC = 0000005C
MEM res : PC = 00000058
WB  res : PC = 00000054
PC : 00000068
PIPE :: write back : data = 000013BA, reg_idx = 00000002, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[2] = 000013ba
PIPE :: execute_instruction : rs forward trigger 00FFFFE8PIPE :: execute_instruction : operands (00FFFFE8, 00FFFFE8)
PIPE :: Fetched instruction : 03E00008
PIPE :: decode_instruction : 27bd0018
PIPE :: 03c0e821 :: memory access : Address = 00FFFFE8, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = 00000068
ID  res : PC = 00000064
EX  res : PC = 00000060
MEM res : PC = 0000005C
WB  res : PC = 00000058
PC : 0000006C
PIPE :: write back : data = 00FFFFE8, reg_idx = 0000001D, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[29] = 00ffffe8
PIPE :: execute_instruction : operands (00FFFFE8, 00FFFFE8)
PIPE :: Fetched instruction : 00000000
PIPE :: decode_instruction : 03e00008
PIPE :: 8fbe0014 :: memory access : Address = 00FFFFFC, Reg2 = 00FFFFE8
MEMORY READ : MEM[00fffffc] = 00000000
================current pipeline status=================
IF  res : PC = 0000006C
ID  res : PC = 00000068
EX  res : PC = 00000064
MEM res : PC = 00000060
WB  res : PC = 0000005C
PC : 00000070
PIPE :: write back : data = 00000000, reg_idx = 0000001E, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[30] = 00000000
No Proper Ops
PIPE :: execute_instruction : operands (FFFFFFFF, 00000000)
PIPE :: Fetch instruction : TERMINATION
PIPE :: decode_instruction : 00000000
PIPE :: 27bd0018 :: memory access : Address = 01000000, Reg2 = 00FFFFE8
================current pipeline status=================
IF  res : PC = FFFFFFFF
ID  res : PC = 0000006C
EX  res : PC = 00000068
MEM res : PC = 00000064
WB  res : PC = 00000060
PC : FFFFFFFF
PIPE :: write back : data = 01000000, reg_idx = 0000001D, reg_write = 1, isUpperAccess = 0
REG WRITE BACK : REG[29] = 01000000
PIPE :: execute_instruction : operands (00000000, 00000000)
PIPE :: Fetch instruction : TERMINATION
PIPE :: 03e00008 :: memory access : Address = FFFFFFFF, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = FFFFFFFF
ID  res : PC = FFFFFFFF
EX  res : PC = 0000006C
MEM res : PC = 00000068
WB  res : PC = 00000064
PC : FFFFFFFF
PIPE :: write back : data = FFFFFFFF, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: Fetch instruction : TERMINATION
PIPE :: 00000000 :: memory access : Address = 00000000, Reg2 = 00000000
================current pipeline status=================
IF  res : PC = FFFFFFFF
ID  res : PC = FFFFFFFF
EX  res : PC = FFFFFFFF
MEM res : PC = 0000006C
WB  res : PC = 00000068
PC : FFFFFFFF
PIPE :: write back : data = 00000000, reg_idx = 00000000, reg_write = 1, isUpperAccess = 0
PIPE :: Fetch instruction : TERMINATION
================current pipeline status=================
IF  res : PC = FFFFFFFF
ID  res : PC = FFFFFFFF
EX  res : PC = FFFFFFFF
MEM res : PC = FFFFFFFF
WB  res : PC = 0000006C
=============result: repr in decimal=================
Final return Value register[v0]         :   5050
Number of cycles                        :   1338
Number of executed instructions         :   1335
Number of executed R-type               :    413
Number of executed I-type               :    921
Number of executed J-type               :      1
Number of memory access instruction     :    614
Number of taken branches                :    102
